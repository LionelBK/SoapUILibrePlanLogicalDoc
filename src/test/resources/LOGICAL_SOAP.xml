<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="0150c1e3-79c3-4cf4-a726-f314a9c3c807" created="3.8.0" activeEnvironment="Default" name="LOGICALDOC" resourceRoot="" updated="3.8.0 2021-04-27T13:32:15Z" encryptionMode="Not encrypted" abortOnError="false" runType="SEQUENTIAL" soapui-version="5.4.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="750d49f9-5e40-468c-9ec7-02d4d5197cf4" wsaVersion="NONE" name="/Auth" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapAuthServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Auth?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Auth?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Auth?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapAuthServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Auth?wsdl=Auth.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapAuthServiceServiceSoapBinding" type="ns1:Auth">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="valid">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="valid">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="logout">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="logoutResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="renew">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="renewResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="login">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loginResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapAuthServiceService">
    <wsdl:port binding="tns:SoapAuthServiceServiceSoapBinding" name="SoapAuthServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Auth"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Auth?wsdl=Auth.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Auth" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="login" type="tns:login"/>
      <xs:element name="loginResponse" type="tns:loginResponse"/>
      <xs:element name="logout" type="tns:logout"/>
      <xs:element name="logoutResponse" type="tns:logoutResponse"/>
      <xs:element name="renew" type="tns:renew"/>
      <xs:element name="renewResponse" type="tns:renewResponse"/>
      <xs:element name="valid" type="tns:valid"/>
      <xs:element name="validResponse" type="tns:validResponse"/>
      <xs:complexType name="valid">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="logout">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="logoutResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="renew">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renewResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="login">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="loginResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="valid">
    <wsdl:part element="ns1:valid" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renewResponse">
    <wsdl:part element="ns1:renewResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validResponse">
    <wsdl:part element="ns1:validResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="logout">
    <wsdl:part element="ns1:logout" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="logoutResponse">
    <wsdl:part element="ns1:logoutResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginResponse">
    <wsdl:part element="ns1:loginResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renew">
    <wsdl:part element="ns1:renew" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="login">
    <wsdl:part element="ns1:login" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Auth">
    <wsdl:operation name="valid">
      <wsdl:input message="ns1:valid" name="valid"></wsdl:input>
      <wsdl:output message="ns1:validResponse" name="validResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <wsdl:input message="ns1:logout" name="logout"></wsdl:input>
      <wsdl:output message="ns1:logoutResponse" name="logoutResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <wsdl:input message="ns1:renew" name="renew"></wsdl:input>
      <wsdl:output message="ns1:renewResponse" name="renewResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdl:input message="ns1:login" name="login"></wsdl:input>
      <wsdl:output message="ns1:loginResponse" name="loginResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint></con:endpoints><con:operation id="d1610b22-11d7-4dad-8714-ff989995db71" isOneWay="false" action="" name="login" bindingOperationName="login" type="Request-Response" outputName="loginResponse" inputName="login" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d92d48c3-bbf6-4011-8704-a5fca9fd5862" isOneWay="false" action="" name="logout" bindingOperationName="logout" type="Request-Response" outputName="logoutResponse" inputName="logout" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="64c4d650-5215-4a50-91e1-2d185fd8a401" isOneWay="false" action="" name="renew" bindingOperationName="renew" type="Request-Response" outputName="renewResponse" inputName="renew" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="530d53de-bdcf-4980-8138-b6c40b7a5a45" isOneWay="false" action="" name="valid" bindingOperationName="valid" type="Request-Response" outputName="validResponse" inputName="valid" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="51757a90-c3bf-4161-860a-f40ef809c677" wsaVersion="NONE" name="/Bookmark" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapBookmarkServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Bookmark?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Bookmark?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Bookmark?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapBookmarkServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Bookmark?wsdl=Bookmark.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapBookmarkServiceServiceSoapBinding" type="ns1:Bookmark">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="unbookmarkFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unbookmarkFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unbookmarkFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveBookmark">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="saveBookmark">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="saveBookmarkResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bookmarkDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="bookmarkDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="bookmarkDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBookmark">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteBookmark">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteBookmarkResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unbookmarkDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unbookmarkDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unbookmarkDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBookmarks">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBookmarks">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBookmarksResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bookmarkFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="bookmarkFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="bookmarkFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapBookmarkServiceService">
    <wsdl:port binding="tns:SoapBookmarkServiceServiceSoapBinding" name="SoapBookmarkServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Bookmark"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Bookmark?wsdl=Bookmark.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Bookmark" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="bookmarkDocument" type="tns:bookmarkDocument"/>
      <xs:element name="bookmarkDocumentResponse" type="tns:bookmarkDocumentResponse"/>
      <xs:element name="bookmarkFolder" type="tns:bookmarkFolder"/>
      <xs:element name="bookmarkFolderResponse" type="tns:bookmarkFolderResponse"/>
      <xs:element name="deleteBookmark" type="tns:deleteBookmark"/>
      <xs:element name="deleteBookmarkResponse" type="tns:deleteBookmarkResponse"/>
      <xs:element name="getBookmarks" type="tns:getBookmarks"/>
      <xs:element name="getBookmarksResponse" type="tns:getBookmarksResponse"/>
      <xs:element name="saveBookmark" type="tns:saveBookmark"/>
      <xs:element name="saveBookmarkResponse" type="tns:saveBookmarkResponse"/>
      <xs:element name="unbookmarkDocument" type="tns:unbookmarkDocument"/>
      <xs:element name="unbookmarkDocumentResponse" type="tns:unbookmarkDocumentResponse"/>
      <xs:element name="unbookmarkFolder" type="tns:unbookmarkFolder"/>
      <xs:element name="unbookmarkFolderResponse" type="tns:unbookmarkFolderResponse"/>
      <xs:complexType name="unbookmarkFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unbookmarkFolderResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="saveBookmark">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSBookmark">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element name="targetId" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element name="userId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="saveBookmarkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bookmarkDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bookmarkDocumentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteBookmark">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="bookmarkId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteBookmarkResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="unbookmarkDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unbookmarkDocumentResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getBookmarks">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getBookmarksResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bookmarkFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bookmarkFolderResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="unbookmarkFolder">
    <wsdl:part element="ns1:unbookmarkFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveBookmark">
    <wsdl:part element="ns1:saveBookmark" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unbookmarkDocumentResponse">
    <wsdl:part element="ns1:unbookmarkDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveBookmarkResponse">
    <wsdl:part element="ns1:saveBookmarkResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bookmarkDocument">
    <wsdl:part element="ns1:bookmarkDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBookmark">
    <wsdl:part element="ns1:deleteBookmark" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bookmarkDocumentResponse">
    <wsdl:part element="ns1:bookmarkDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBookmarkResponse">
    <wsdl:part element="ns1:deleteBookmarkResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unbookmarkDocument">
    <wsdl:part element="ns1:unbookmarkDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bookmarkFolderResponse">
    <wsdl:part element="ns1:bookmarkFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBookmarksResponse">
    <wsdl:part element="ns1:getBookmarksResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unbookmarkFolderResponse">
    <wsdl:part element="ns1:unbookmarkFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bookmarkFolder">
    <wsdl:part element="ns1:bookmarkFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBookmarks">
    <wsdl:part element="ns1:getBookmarks" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Bookmark">
    <wsdl:operation name="unbookmarkFolder">
      <wsdl:input message="ns1:unbookmarkFolder" name="unbookmarkFolder"></wsdl:input>
      <wsdl:output message="ns1:unbookmarkFolderResponse" name="unbookmarkFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveBookmark">
      <wsdl:input message="ns1:saveBookmark" name="saveBookmark"></wsdl:input>
      <wsdl:output message="ns1:saveBookmarkResponse" name="saveBookmarkResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bookmarkDocument">
      <wsdl:input message="ns1:bookmarkDocument" name="bookmarkDocument"></wsdl:input>
      <wsdl:output message="ns1:bookmarkDocumentResponse" name="bookmarkDocumentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBookmark">
      <wsdl:input message="ns1:deleteBookmark" name="deleteBookmark"></wsdl:input>
      <wsdl:output message="ns1:deleteBookmarkResponse" name="deleteBookmarkResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unbookmarkDocument">
      <wsdl:input message="ns1:unbookmarkDocument" name="unbookmarkDocument"></wsdl:input>
      <wsdl:output message="ns1:unbookmarkDocumentResponse" name="unbookmarkDocumentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBookmarks">
      <wsdl:input message="ns1:getBookmarks" name="getBookmarks"></wsdl:input>
      <wsdl:output message="ns1:getBookmarksResponse" name="getBookmarksResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bookmarkFolder">
      <wsdl:input message="ns1:bookmarkFolder" name="bookmarkFolder"></wsdl:input>
      <wsdl:output message="ns1:bookmarkFolderResponse" name="bookmarkFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint></con:endpoints><con:operation id="9dca3d8b-9544-4f3e-8e79-2c9de7aac11c" isOneWay="false" action="" name="bookmarkDocument" bindingOperationName="bookmarkDocument" type="Request-Response" outputName="bookmarkDocumentResponse" inputName="bookmarkDocument" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="18a7aeb2-b498-485b-ba0f-2d8257f82817" isOneWay="false" action="" name="bookmarkFolder" bindingOperationName="bookmarkFolder" type="Request-Response" outputName="bookmarkFolderResponse" inputName="bookmarkFolder" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a97cd417-53de-497a-8171-055fc3fb42fc" isOneWay="false" action="" name="deleteBookmark" bindingOperationName="deleteBookmark" type="Request-Response" outputName="deleteBookmarkResponse" inputName="deleteBookmark" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c9e3781d-ac3d-4ef5-8455-d2d6b046e58b" isOneWay="false" action="" name="getBookmarks" bindingOperationName="getBookmarks" type="Request-Response" outputName="getBookmarksResponse" inputName="getBookmarks" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f3b40d3-7d3e-495e-95ce-289d79cb236f" isOneWay="false" action="" name="saveBookmark" bindingOperationName="saveBookmark" type="Request-Response" outputName="saveBookmarkResponse" inputName="saveBookmark" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cfcfebff-d4ac-45aa-b665-a414af2fd6bd" isOneWay="false" action="" name="unbookmarkDocument" bindingOperationName="unbookmarkDocument" type="Request-Response" outputName="unbookmarkDocumentResponse" inputName="unbookmarkDocument" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9a6f2a56-c4d6-4fc0-98e9-4b8dd8c4099b" isOneWay="false" action="" name="unbookmarkFolder" bindingOperationName="unbookmarkFolder" type="Request-Response" outputName="unbookmarkFolderResponse" inputName="unbookmarkFolder" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="21be4497-73cc-4686-aa16-906ee05bf436" wsaVersion="NONE" name="/Document" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapDocumentServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Document?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Document?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Document?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapDocumentServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Document?wsdl=Document.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapDocumentServiceServiceSoapBinding" type="ns1:Document">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="setPassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setPassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDownloadTicket">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createDownloadTicket">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createDownloadTicketResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAliases">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAliases">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAliasesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getResource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLinks">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLinks">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLinksResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkinDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkinDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="upload">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="upload">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="uploadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getContent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getContentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="link">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="link">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="linkResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="update">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unprotect">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unprotect">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unprotectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="delete">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="replaceFile">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="replaceFile">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="replaceFileResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadResource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="uploadResource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="uploadResourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendEmail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sendEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkin">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkin">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkinResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNotes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNotes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNotesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteNote">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteNote">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteNoteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="create">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="create">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getVersions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getVersionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lock">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="lock">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="lockResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rateDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="rateDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="rateDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkout">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkout">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkoutResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAlias">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createAlias">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAliasResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentByCustomId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentByCustomId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentByCustomIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="promoteVersion">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="promoteVersion">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="promoteVersionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="move">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="move">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="moveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlock">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unlock">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unlockResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reindex">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="reindex">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="reindexResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restore">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="restore">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="restoreResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocuments">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocuments">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createThumbnail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createThumbnail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createThumbnailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLink">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteLink">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteLinkResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listDocuments">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listDocuments">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listDocumentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteVersion">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteVersion">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteVersionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRatings">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRatings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRatingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersionContent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getVersionContent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getVersionContentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecentDocuments">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRecentDocuments">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRecentDocumentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExtractedText">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExtractedText">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExtractedTextResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNote">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addNote">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addNoteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rename">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="rename">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="renameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unsetPassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unsetPassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unsetPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPdf">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createPdf">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createPdfResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadable">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isReadable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isReadableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapDocumentServiceService">
    <wsdl:port binding="tns:SoapDocumentServiceServiceSoapBinding" name="SoapDocumentServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Document"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Document?wsdl=Document.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Document" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="addNote" type="tns:addNote"/>
      <xs:element name="addNoteResponse" type="tns:addNoteResponse"/>
      <xs:element name="attribute" type="tns:WSAttribute"/>
      <xs:element name="checkin" type="tns:checkin"/>
      <xs:element name="checkinDocument" type="tns:checkinDocument"/>
      <xs:element name="checkinDocumentResponse" type="tns:checkinDocumentResponse"/>
      <xs:element name="checkinResponse" type="tns:checkinResponse"/>
      <xs:element name="checkout" type="tns:checkout"/>
      <xs:element name="checkoutResponse" type="tns:checkoutResponse"/>
      <xs:element name="create" type="tns:create"/>
      <xs:element name="createAlias" type="tns:createAlias"/>
      <xs:element name="createAliasResponse" type="tns:createAliasResponse"/>
      <xs:element name="createDownloadTicket" type="tns:createDownloadTicket"/>
      <xs:element name="createDownloadTicketResponse" type="tns:createDownloadTicketResponse"/>
      <xs:element name="createPdf" type="tns:createPdf"/>
      <xs:element name="createPdfResponse" type="tns:createPdfResponse"/>
      <xs:element name="createResponse" type="tns:createResponse"/>
      <xs:element name="createThumbnail" type="tns:createThumbnail"/>
      <xs:element name="createThumbnailResponse" type="tns:createThumbnailResponse"/>
      <xs:element name="delete" type="tns:delete"/>
      <xs:element name="deleteLink" type="tns:deleteLink"/>
      <xs:element name="deleteLinkResponse" type="tns:deleteLinkResponse"/>
      <xs:element name="deleteNote" type="tns:deleteNote"/>
      <xs:element name="deleteNoteResponse" type="tns:deleteNoteResponse"/>
      <xs:element name="deleteResponse" type="tns:deleteResponse"/>
      <xs:element name="deleteVersion" type="tns:deleteVersion"/>
      <xs:element name="deleteVersionResponse" type="tns:deleteVersionResponse"/>
      <xs:element name="document" type="tns:WSDocument"/>
      <xs:element name="getAliases" type="tns:getAliases"/>
      <xs:element name="getAliasesResponse" type="tns:getAliasesResponse"/>
      <xs:element name="getContent" type="tns:getContent"/>
      <xs:element name="getContentResponse" type="tns:getContentResponse"/>
      <xs:element name="getDocument" type="tns:getDocument"/>
      <xs:element name="getDocumentByCustomId" type="tns:getDocumentByCustomId"/>
      <xs:element name="getDocumentByCustomIdResponse" type="tns:getDocumentByCustomIdResponse"/>
      <xs:element name="getDocumentResponse" type="tns:getDocumentResponse"/>
      <xs:element name="getDocuments" type="tns:getDocuments"/>
      <xs:element name="getDocumentsResponse" type="tns:getDocumentsResponse"/>
      <xs:element name="getExtractedText" type="tns:getExtractedText"/>
      <xs:element name="getExtractedTextResponse" type="tns:getExtractedTextResponse"/>
      <xs:element name="getLinks" type="tns:getLinks"/>
      <xs:element name="getLinksResponse" type="tns:getLinksResponse"/>
      <xs:element name="getNotes" type="tns:getNotes"/>
      <xs:element name="getNotesResponse" type="tns:getNotesResponse"/>
      <xs:element name="getRatings" type="tns:getRatings"/>
      <xs:element name="getRatingsResponse" type="tns:getRatingsResponse"/>
      <xs:element name="getRecentDocuments" type="tns:getRecentDocuments"/>
      <xs:element name="getRecentDocumentsResponse" type="tns:getRecentDocumentsResponse"/>
      <xs:element name="getResource" type="tns:getResource"/>
      <xs:element name="getResourceResponse" type="tns:getResourceResponse"/>
      <xs:element name="getVersionContent" type="tns:getVersionContent"/>
      <xs:element name="getVersionContentResponse" type="tns:getVersionContentResponse"/>
      <xs:element name="getVersions" type="tns:getVersions"/>
      <xs:element name="getVersionsResponse" type="tns:getVersionsResponse"/>
      <xs:element name="isReadable" type="tns:isReadable"/>
      <xs:element name="isReadableResponse" type="tns:isReadableResponse"/>
      <xs:element name="link" type="tns:link"/>
      <xs:element name="linkResponse" type="tns:linkResponse"/>
      <xs:element name="listDocuments" type="tns:listDocuments"/>
      <xs:element name="listDocumentsResponse" type="tns:listDocumentsResponse"/>
      <xs:element name="lock" type="tns:lock"/>
      <xs:element name="lockResponse" type="tns:lockResponse"/>
      <xs:element name="move" type="tns:move"/>
      <xs:element name="moveResponse" type="tns:moveResponse"/>
      <xs:element name="promoteVersion" type="tns:promoteVersion"/>
      <xs:element name="promoteVersionResponse" type="tns:promoteVersionResponse"/>
      <xs:element name="rateDocument" type="tns:rateDocument"/>
      <xs:element name="rateDocumentResponse" type="tns:rateDocumentResponse"/>
      <xs:element name="reindex" type="tns:reindex"/>
      <xs:element name="reindexResponse" type="tns:reindexResponse"/>
      <xs:element name="rename" type="tns:rename"/>
      <xs:element name="renameResponse" type="tns:renameResponse"/>
      <xs:element name="replaceFile" type="tns:replaceFile"/>
      <xs:element name="replaceFileResponse" type="tns:replaceFileResponse"/>
      <xs:element name="restore" type="tns:restore"/>
      <xs:element name="restoreResponse" type="tns:restoreResponse"/>
      <xs:element name="sendEmail" type="tns:sendEmail"/>
      <xs:element name="sendEmailResponse" type="tns:sendEmailResponse"/>
      <xs:element name="setPassword" type="tns:setPassword"/>
      <xs:element name="setPasswordResponse" type="tns:setPasswordResponse"/>
      <xs:element name="unlock" type="tns:unlock"/>
      <xs:element name="unlockResponse" type="tns:unlockResponse"/>
      <xs:element name="unprotect" type="tns:unprotect"/>
      <xs:element name="unprotectResponse" type="tns:unprotectResponse"/>
      <xs:element name="unsetPassword" type="tns:unsetPassword"/>
      <xs:element name="unsetPasswordResponse" type="tns:unsetPasswordResponse"/>
      <xs:element name="update" type="tns:update"/>
      <xs:element name="updateResponse" type="tns:updateResponse"/>
      <xs:element name="upload" type="tns:upload"/>
      <xs:element name="uploadResource" type="tns:uploadResource"/>
      <xs:element name="uploadResourceResponse" type="tns:uploadResourceResponse"/>
      <xs:element name="uploadResponse" type="tns:uploadResponse"/>
      <xs:complexType name="setPassword">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setPasswordResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createDownloadTicket">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="suffix" type="xs:string"/>
          <xs:element minOccurs="0" name="expireHours" type="xs:int"/>
          <xs:element minOccurs="0" name="expireDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDownloadTicketResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="ticket" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAliases">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAliasesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="aliases" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDocument">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element name="creatorId" type="xs:long"/>
          <xs:element minOccurs="0" name="customId" type="xs:string"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteUserId" type="xs:long"/>
          <xs:element minOccurs="0" name="digest" type="xs:string"/>
          <xs:element minOccurs="0" name="docRef" type="xs:long"/>
          <xs:element minOccurs="0" name="docRefType" type="xs:string"/>
          <xs:element minOccurs="0" name="exportId" type="xs:long"/>
          <xs:element minOccurs="0" name="exportName" type="xs:string"/>
          <xs:element name="exportStatus" type="xs:int"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element name="fileSize" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="formId" type="xs:long"/>
          <xs:element minOccurs="0" name="icon" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="immutable" type="xs:int"/>
          <xs:element name="indexed" type="xs:int"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="lockUserId" type="xs:long"/>
          <xs:element name="nature" type="xs:int"/>
          <xs:element name="pages" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordProtected" type="xs:int"/>
          <xs:element name="published" type="xs:int"/>
          <xs:element minOccurs="0" name="publisher" type="xs:string"/>
          <xs:element name="publisherId" type="xs:long"/>
          <xs:element minOccurs="0" name="rating" type="xs:int"/>
          <xs:element minOccurs="0" name="score" type="xs:int"/>
          <xs:element name="signed" type="xs:int"/>
          <xs:element name="stamped" type="xs:int"/>
          <xs:element minOccurs="0" name="startPublishing" type="xs:string"/>
          <xs:element name="status" type="xs:int"/>
          <xs:element minOccurs="0" name="stopPublishing" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowStatus" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowStatusDisplay" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateValue" type="xs:string"/>
          <xs:element minOccurs="0" name="doubleValue" type="xs:double"/>
          <xs:element name="editor" type="xs:int"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element minOccurs="0" name="intValue" type="xs:long"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element name="mandatory" type="xs:int"/>
          <xs:element name="multiple" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="parent" type="xs:string"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
          <xs:element minOccurs="0" name="stringValues" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getResource">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="suffix" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getResourceResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLinks">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLinksResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="tns:WSLink"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSLink">
        <xs:sequence>
          <xs:element name="doc1" type="xs:long"/>
          <xs:element name="doc2" type="xs:long"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkinDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="filename" type="xs:string"/>
          <xs:element name="release" type="xs:boolean"/>
          <xs:element minOccurs="0" name="docVO" type="tns:WSDocument"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkinDocumentResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="upload">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element name="release" type="xs:boolean"/>
          <xs:element minOccurs="0" name="filename" type="xs:string"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="uploadResponse">
        <xs:sequence>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getContent">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getContentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="link">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="doc1" type="xs:long"/>
          <xs:element name="doc2" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="link" type="tns:WSLink"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="unprotect">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unprotectResponse">
        <xs:sequence>
          <xs:element name="unprotect" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="replaceFile">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="replaceFileResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="uploadResource">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="suffix" type="xs:string"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="uploadResourceResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="sendEmail">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="docIds" type="xs:long"/>
          <xs:element minOccurs="0" name="recipients" type="xs:string"/>
          <xs:element minOccurs="0" name="subject" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendEmailResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="checkin">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="filename" type="xs:string"/>
          <xs:element name="release" type="xs:boolean"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkinResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getNotes">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNotesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="note" type="tns:WSNote"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSNote">
        <xs:sequence>
          <xs:element minOccurs="0" name="date" type="xs:dateTime"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
          <xs:element name="page" type="xs:int"/>
          <xs:element name="userId" type="xs:long"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteNote">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="noteId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteNoteResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="create">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersions">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersionsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lock">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lockResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="rateDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="vote" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rateDocumentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="rating" type="tns:WSRating"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSRating">
        <xs:sequence>
          <xs:element minOccurs="0" name="date" type="xs:dateTime"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="userId" type="xs:long"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element name="vote" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkout">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkoutResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createAlias">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createAliasResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentByCustomId">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="customId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentByCustomIdResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="promoteVersion">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="promoteVersionResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="move">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moveResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="unlock">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unlockResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="reindex">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="content" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reindexResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="restore">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="restoreResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocuments">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="docIds" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="documents" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createThumbnail">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createThumbnailResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="deleteLink">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLinkResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="listDocuments">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listDocumentsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteVersion">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteVersionResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="latest-version" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRatings">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRatingsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="rating" type="tns:WSRating"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersionContent">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersionContentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRecentDocuments">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="maxHits" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRecentDocumentsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getExtractedText">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getExtractedTextResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addNote">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="note" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addNoteResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="note" type="tns:WSNote"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rename">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renameResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="unsetPassword">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="currentPassword" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unsetPasswordResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createPdf">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPdfResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="isReadable">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isReadableResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="setPassword">
    <wsdl:part element="ns1:setPassword" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAliasesResponse">
    <wsdl:part element="ns1:getAliasesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createDownloadTicket">
    <wsdl:part element="ns1:createDownloadTicket" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAliases">
    <wsdl:part element="ns1:getAliases" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResource">
    <wsdl:part element="ns1:getResource" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addNoteResponse">
    <wsdl:part element="ns1:addNoteResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="upload">
    <wsdl:part element="ns1:upload" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPdfResponse">
    <wsdl:part element="ns1:createPdfResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteVersionResponse">
    <wsdl:part element="ns1:deleteVersionResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersionContentResponse">
    <wsdl:part element="ns1:getVersionContentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadResponse">
    <wsdl:part element="ns1:uploadResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinResponse">
    <wsdl:part element="ns1:checkinResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unprotect">
    <wsdl:part element="ns1:unprotect" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="moveResponse">
    <wsdl:part element="ns1:moveResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="restoreResponse">
    <wsdl:part element="ns1:restoreResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkin">
    <wsdl:part element="ns1:checkin" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadableResponse">
    <wsdl:part element="ns1:isReadableResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteNote">
    <wsdl:part element="ns1:deleteNote" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="create">
    <wsdl:part element="ns1:create" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersions">
    <wsdl:part element="ns1:getVersions" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="lock">
    <wsdl:part element="ns1:lock" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadResourceResponse">
    <wsdl:part element="ns1:uploadResourceResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createDownloadTicketResponse">
    <wsdl:part element="ns1:createDownloadTicketResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="lockResponse">
    <wsdl:part element="ns1:lockResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkResponse">
    <wsdl:part element="ns1:linkResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAliasResponse">
    <wsdl:part element="ns1:createAliasResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentsResponse">
    <wsdl:part element="ns1:getDocumentsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createThumbnailResponse">
    <wsdl:part element="ns1:createThumbnailResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unlock">
    <wsdl:part element="ns1:unlock" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendEmailResponse">
    <wsdl:part element="ns1:sendEmailResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reindex">
    <wsdl:part element="ns1:reindex" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocument">
    <wsdl:part element="ns1:getDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocuments">
    <wsdl:part element="ns1:getDocuments" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResourceResponse">
    <wsdl:part element="ns1:getResourceResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContentResponse">
    <wsdl:part element="ns1:getContentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createThumbnail">
    <wsdl:part element="ns1:createThumbnail" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExtractedTextResponse">
    <wsdl:part element="ns1:getExtractedTextResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLinksResponse">
    <wsdl:part element="ns1:getLinksResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRatings">
    <wsdl:part element="ns1:getRatings" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersionContent">
    <wsdl:part element="ns1:getVersionContent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unsetPasswordResponse">
    <wsdl:part element="ns1:unsetPasswordResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecentDocumentsResponse">
    <wsdl:part element="ns1:getRecentDocumentsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rateDocumentResponse">
    <wsdl:part element="ns1:rateDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addNote">
    <wsdl:part element="ns1:addNote" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLinkResponse">
    <wsdl:part element="ns1:deleteLinkResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unsetPassword">
    <wsdl:part element="ns1:unsetPassword" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadable">
    <wsdl:part element="ns1:isReadable" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateResponse">
    <wsdl:part element="ns1:updateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLinks">
    <wsdl:part element="ns1:getLinks" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinDocument">
    <wsdl:part element="ns1:checkinDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listDocumentsResponse">
    <wsdl:part element="ns1:listDocumentsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContent">
    <wsdl:part element="ns1:getContent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="link">
    <wsdl:part element="ns1:link" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="update">
    <wsdl:part element="ns1:update" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinDocumentResponse">
    <wsdl:part element="ns1:checkinDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="delete">
    <wsdl:part element="ns1:delete" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="replaceFile">
    <wsdl:part element="ns1:replaceFile" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="promoteVersionResponse">
    <wsdl:part element="ns1:promoteVersionResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadResource">
    <wsdl:part element="ns1:uploadResource" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendEmail">
    <wsdl:part element="ns1:sendEmail" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNotes">
    <wsdl:part element="ns1:getNotes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteResponse">
    <wsdl:part element="ns1:deleteResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameResponse">
    <wsdl:part element="ns1:renameResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rateDocument">
    <wsdl:part element="ns1:rateDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersionsResponse">
    <wsdl:part element="ns1:getVersionsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkout">
    <wsdl:part element="ns1:checkout" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reindexResponse">
    <wsdl:part element="ns1:reindexResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRatingsResponse">
    <wsdl:part element="ns1:getRatingsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAlias">
    <wsdl:part element="ns1:createAlias" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentByCustomId">
    <wsdl:part element="ns1:getDocumentByCustomId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="promoteVersion">
    <wsdl:part element="ns1:promoteVersion" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkoutResponse">
    <wsdl:part element="ns1:checkoutResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unprotectResponse">
    <wsdl:part element="ns1:unprotectResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="move">
    <wsdl:part element="ns1:move" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentByCustomIdResponse">
    <wsdl:part element="ns1:getDocumentByCustomIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="restore">
    <wsdl:part element="ns1:restore" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createResponse">
    <wsdl:part element="ns1:createResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLink">
    <wsdl:part element="ns1:deleteLink" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listDocuments">
    <wsdl:part element="ns1:listDocuments" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteVersion">
    <wsdl:part element="ns1:deleteVersion" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentResponse">
    <wsdl:part element="ns1:getDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteNoteResponse">
    <wsdl:part element="ns1:deleteNoteResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNotesResponse">
    <wsdl:part element="ns1:getNotesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unlockResponse">
    <wsdl:part element="ns1:unlockResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecentDocuments">
    <wsdl:part element="ns1:getRecentDocuments" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExtractedText">
    <wsdl:part element="ns1:getExtractedText" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rename">
    <wsdl:part element="ns1:rename" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPasswordResponse">
    <wsdl:part element="ns1:setPasswordResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPdf">
    <wsdl:part element="ns1:createPdf" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="replaceFileResponse">
    <wsdl:part element="ns1:replaceFileResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Document">
    <wsdl:operation name="setPassword">
      <wsdl:input message="ns1:setPassword" name="setPassword"></wsdl:input>
      <wsdl:output message="ns1:setPasswordResponse" name="setPasswordResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDownloadTicket">
      <wsdl:input message="ns1:createDownloadTicket" name="createDownloadTicket"></wsdl:input>
      <wsdl:output message="ns1:createDownloadTicketResponse" name="createDownloadTicketResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAliases">
      <wsdl:input message="ns1:getAliases" name="getAliases"></wsdl:input>
      <wsdl:output message="ns1:getAliasesResponse" name="getAliasesResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResource">
      <wsdl:input message="ns1:getResource" name="getResource"></wsdl:input>
      <wsdl:output message="ns1:getResourceResponse" name="getResourceResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLinks">
      <wsdl:input message="ns1:getLinks" name="getLinks"></wsdl:input>
      <wsdl:output message="ns1:getLinksResponse" name="getLinksResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinDocument">
      <wsdl:input message="ns1:checkinDocument" name="checkinDocument"></wsdl:input>
      <wsdl:output message="ns1:checkinDocumentResponse" name="checkinDocumentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="upload">
      <wsdl:input message="ns1:upload" name="upload"></wsdl:input>
      <wsdl:output message="ns1:uploadResponse" name="uploadResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContent">
      <wsdl:input message="ns1:getContent" name="getContent"></wsdl:input>
      <wsdl:output message="ns1:getContentResponse" name="getContentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="link">
      <wsdl:input message="ns1:link" name="link"></wsdl:input>
      <wsdl:output message="ns1:linkResponse" name="linkResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="ns1:update" name="update"></wsdl:input>
      <wsdl:output message="ns1:updateResponse" name="updateResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unprotect">
      <wsdl:input message="ns1:unprotect" name="unprotect"></wsdl:input>
      <wsdl:output message="ns1:unprotectResponse" name="unprotectResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="ns1:delete" name="delete"></wsdl:input>
      <wsdl:output message="ns1:deleteResponse" name="deleteResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="replaceFile">
      <wsdl:input message="ns1:replaceFile" name="replaceFile"></wsdl:input>
      <wsdl:output message="ns1:replaceFileResponse" name="replaceFileResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadResource">
      <wsdl:input message="ns1:uploadResource" name="uploadResource"></wsdl:input>
      <wsdl:output message="ns1:uploadResourceResponse" name="uploadResourceResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendEmail">
      <wsdl:input message="ns1:sendEmail" name="sendEmail"></wsdl:input>
      <wsdl:output message="ns1:sendEmailResponse" name="sendEmailResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkin">
      <wsdl:input message="ns1:checkin" name="checkin"></wsdl:input>
      <wsdl:output message="ns1:checkinResponse" name="checkinResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNotes">
      <wsdl:input message="ns1:getNotes" name="getNotes"></wsdl:input>
      <wsdl:output message="ns1:getNotesResponse" name="getNotesResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteNote">
      <wsdl:input message="ns1:deleteNote" name="deleteNote"></wsdl:input>
      <wsdl:output message="ns1:deleteNoteResponse" name="deleteNoteResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="create">
      <wsdl:input message="ns1:create" name="create"></wsdl:input>
      <wsdl:output message="ns1:createResponse" name="createResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersions">
      <wsdl:input message="ns1:getVersions" name="getVersions"></wsdl:input>
      <wsdl:output message="ns1:getVersionsResponse" name="getVersionsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lock">
      <wsdl:input message="ns1:lock" name="lock"></wsdl:input>
      <wsdl:output message="ns1:lockResponse" name="lockResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rateDocument">
      <wsdl:input message="ns1:rateDocument" name="rateDocument"></wsdl:input>
      <wsdl:output message="ns1:rateDocumentResponse" name="rateDocumentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkout">
      <wsdl:input message="ns1:checkout" name="checkout"></wsdl:input>
      <wsdl:output message="ns1:checkoutResponse" name="checkoutResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAlias">
      <wsdl:input message="ns1:createAlias" name="createAlias"></wsdl:input>
      <wsdl:output message="ns1:createAliasResponse" name="createAliasResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentByCustomId">
      <wsdl:input message="ns1:getDocumentByCustomId" name="getDocumentByCustomId"></wsdl:input>
      <wsdl:output message="ns1:getDocumentByCustomIdResponse" name="getDocumentByCustomIdResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="promoteVersion">
      <wsdl:input message="ns1:promoteVersion" name="promoteVersion"></wsdl:input>
      <wsdl:output message="ns1:promoteVersionResponse" name="promoteVersionResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="move">
      <wsdl:input message="ns1:move" name="move"></wsdl:input>
      <wsdl:output message="ns1:moveResponse" name="moveResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlock">
      <wsdl:input message="ns1:unlock" name="unlock"></wsdl:input>
      <wsdl:output message="ns1:unlockResponse" name="unlockResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reindex">
      <wsdl:input message="ns1:reindex" name="reindex"></wsdl:input>
      <wsdl:output message="ns1:reindexResponse" name="reindexResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restore">
      <wsdl:input message="ns1:restore" name="restore"></wsdl:input>
      <wsdl:output message="ns1:restoreResponse" name="restoreResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocument">
      <wsdl:input message="ns1:getDocument" name="getDocument"></wsdl:input>
      <wsdl:output message="ns1:getDocumentResponse" name="getDocumentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocuments">
      <wsdl:input message="ns1:getDocuments" name="getDocuments"></wsdl:input>
      <wsdl:output message="ns1:getDocumentsResponse" name="getDocumentsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createThumbnail">
      <wsdl:input message="ns1:createThumbnail" name="createThumbnail"></wsdl:input>
      <wsdl:output message="ns1:createThumbnailResponse" name="createThumbnailResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLink">
      <wsdl:input message="ns1:deleteLink" name="deleteLink"></wsdl:input>
      <wsdl:output message="ns1:deleteLinkResponse" name="deleteLinkResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listDocuments">
      <wsdl:input message="ns1:listDocuments" name="listDocuments"></wsdl:input>
      <wsdl:output message="ns1:listDocumentsResponse" name="listDocumentsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteVersion">
      <wsdl:input message="ns1:deleteVersion" name="deleteVersion"></wsdl:input>
      <wsdl:output message="ns1:deleteVersionResponse" name="deleteVersionResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRatings">
      <wsdl:input message="ns1:getRatings" name="getRatings"></wsdl:input>
      <wsdl:output message="ns1:getRatingsResponse" name="getRatingsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersionContent">
      <wsdl:input message="ns1:getVersionContent" name="getVersionContent"></wsdl:input>
      <wsdl:output message="ns1:getVersionContentResponse" name="getVersionContentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecentDocuments">
      <wsdl:input message="ns1:getRecentDocuments" name="getRecentDocuments"></wsdl:input>
      <wsdl:output message="ns1:getRecentDocumentsResponse" name="getRecentDocumentsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExtractedText">
      <wsdl:input message="ns1:getExtractedText" name="getExtractedText"></wsdl:input>
      <wsdl:output message="ns1:getExtractedTextResponse" name="getExtractedTextResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNote">
      <wsdl:input message="ns1:addNote" name="addNote"></wsdl:input>
      <wsdl:output message="ns1:addNoteResponse" name="addNoteResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rename">
      <wsdl:input message="ns1:rename" name="rename"></wsdl:input>
      <wsdl:output message="ns1:renameResponse" name="renameResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unsetPassword">
      <wsdl:input message="ns1:unsetPassword" name="unsetPassword"></wsdl:input>
      <wsdl:output message="ns1:unsetPasswordResponse" name="unsetPasswordResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPdf">
      <wsdl:input message="ns1:createPdf" name="createPdf"></wsdl:input>
      <wsdl:output message="ns1:createPdfResponse" name="createPdfResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadable">
      <wsdl:input message="ns1:isReadable" name="isReadable"></wsdl:input>
      <wsdl:output message="ns1:isReadableResponse" name="isReadableResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint></con:endpoints><con:operation id="82b366fa-46ef-49f8-8c00-12f4a0268669" isOneWay="false" action="" name="addNote" bindingOperationName="addNote" type="Request-Response" outputName="addNoteResponse" inputName="addNote" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5c6c9bb3-9b89-493e-be30-c900d0b54356" isOneWay="false" action="" name="checkin" bindingOperationName="checkin" type="Request-Response" outputName="checkinResponse" inputName="checkin" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="626ba4f3-f386-4e28-bc79-03abadf17eff" isOneWay="false" action="" name="checkinDocument" bindingOperationName="checkinDocument" type="Request-Response" outputName="checkinDocumentResponse" inputName="checkinDocument" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4bcdadb3-167c-4f32-b8ff-dfc439bc5152" isOneWay="false" action="" name="checkout" bindingOperationName="checkout" type="Request-Response" outputName="checkoutResponse" inputName="checkout" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c9fa7aec-2829-48a7-ba2e-acc009aabd8e" isOneWay="false" action="" name="create" bindingOperationName="create" type="Request-Response" outputName="createResponse" inputName="create" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="27405de4-235b-418b-98d1-bc1700c7f8a8" isOneWay="false" action="" name="createAlias" bindingOperationName="createAlias" type="Request-Response" outputName="createAliasResponse" inputName="createAlias" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dde1dcf0-77f0-4343-92e9-fa81a48a325f" isOneWay="false" action="" name="createDownloadTicket" bindingOperationName="createDownloadTicket" type="Request-Response" outputName="createDownloadTicketResponse" inputName="createDownloadTicket" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f6dbb0fd-a0bd-4f9e-9350-3d8307af3826" isOneWay="false" action="" name="createPdf" bindingOperationName="createPdf" type="Request-Response" outputName="createPdfResponse" inputName="createPdf" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1b7c01bf-16da-459a-82d7-135ca0c7da64" isOneWay="false" action="" name="createThumbnail" bindingOperationName="createThumbnail" type="Request-Response" outputName="createThumbnailResponse" inputName="createThumbnail" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9e4809ed-0146-4262-a8fa-e3e0c7c047bc" isOneWay="false" action="" name="delete" bindingOperationName="delete" type="Request-Response" outputName="deleteResponse" inputName="delete" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3dd42bb-9916-4ac0-95e8-c9762c1f4a4a" isOneWay="false" action="" name="deleteLink" bindingOperationName="deleteLink" type="Request-Response" outputName="deleteLinkResponse" inputName="deleteLink" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8ac63859-f2fb-417b-9e86-784cca180a84" isOneWay="false" action="" name="deleteNote" bindingOperationName="deleteNote" type="Request-Response" outputName="deleteNoteResponse" inputName="deleteNote" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ade079e2-9d56-4baf-b72b-c2ae22370caa" isOneWay="false" action="" name="deleteVersion" bindingOperationName="deleteVersion" type="Request-Response" outputName="deleteVersionResponse" inputName="deleteVersion" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fd8190cf-60a4-42d4-8d70-d457eb0e7510" isOneWay="false" action="" name="getAliases" bindingOperationName="getAliases" type="Request-Response" outputName="getAliasesResponse" inputName="getAliases" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="575acc98-d480-453f-a21c-302032dc67b3" isOneWay="false" action="" name="getContent" bindingOperationName="getContent" type="Request-Response" outputName="getContentResponse" inputName="getContent" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="586ff29a-4a6d-47ac-b1cf-2f30325d10e0" isOneWay="false" action="" name="getDocument" bindingOperationName="getDocument" type="Request-Response" outputName="getDocumentResponse" inputName="getDocument" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="890b62ad-2cad-406e-a22c-59b31fbb38b4" isOneWay="false" action="" name="getDocumentByCustomId" bindingOperationName="getDocumentByCustomId" type="Request-Response" outputName="getDocumentByCustomIdResponse" inputName="getDocumentByCustomId" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="069297d7-2e5a-4fbe-87b2-b981af0450e6" isOneWay="false" action="" name="getDocuments" bindingOperationName="getDocuments" type="Request-Response" outputName="getDocumentsResponse" inputName="getDocuments" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d21c37f8-f591-41c8-99aa-58baeb69df92" isOneWay="false" action="" name="getExtractedText" bindingOperationName="getExtractedText" type="Request-Response" outputName="getExtractedTextResponse" inputName="getExtractedText" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a80a6cd-c2c6-4d80-a7e7-dfb8a306fbb0" isOneWay="false" action="" name="getLinks" bindingOperationName="getLinks" type="Request-Response" outputName="getLinksResponse" inputName="getLinks" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d0793ce-eb07-4ca2-829f-6fffa24e0996" isOneWay="false" action="" name="getNotes" bindingOperationName="getNotes" type="Request-Response" outputName="getNotesResponse" inputName="getNotes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="091bfcec-db06-4000-9f0d-048cc3f08a84" isOneWay="false" action="" name="getRatings" bindingOperationName="getRatings" type="Request-Response" outputName="getRatingsResponse" inputName="getRatings" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="84a742aa-b640-41b9-a1ba-d7acfa209ae6" isOneWay="false" action="" name="getRecentDocuments" bindingOperationName="getRecentDocuments" type="Request-Response" outputName="getRecentDocumentsResponse" inputName="getRecentDocuments" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e484d923-23d4-45ff-b005-6a6460779736" isOneWay="false" action="" name="getResource" bindingOperationName="getResource" type="Request-Response" outputName="getResourceResponse" inputName="getResource" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4bdfaec9-8ac8-49f8-8834-03e41c33df3b" isOneWay="false" action="" name="getVersionContent" bindingOperationName="getVersionContent" type="Request-Response" outputName="getVersionContentResponse" inputName="getVersionContent" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="70cb3112-d4f8-4517-862d-ca6c5f3608b6" isOneWay="false" action="" name="getVersions" bindingOperationName="getVersions" type="Request-Response" outputName="getVersionsResponse" inputName="getVersions" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="03050c65-8e2b-4f40-a0bb-a23f71235c4a" isOneWay="false" action="" name="isReadable" bindingOperationName="isReadable" type="Request-Response" outputName="isReadableResponse" inputName="isReadable" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ce621dae-8226-458e-a6e9-35a68b56ba9a" isOneWay="false" action="" name="link" bindingOperationName="link" type="Request-Response" outputName="linkResponse" inputName="link" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab868301-ea05-454d-bb6a-3384ae44800a" isOneWay="false" action="" name="listDocuments" bindingOperationName="listDocuments" type="Request-Response" outputName="listDocumentsResponse" inputName="listDocuments" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b52df24-3647-4fc4-a6a9-9d1fdb8ebcd1" isOneWay="false" action="" name="lock" bindingOperationName="lock" type="Request-Response" outputName="lockResponse" inputName="lock" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b1af56ac-bab6-4916-8480-d719dd266fe6" isOneWay="false" action="" name="move" bindingOperationName="move" type="Request-Response" outputName="moveResponse" inputName="move" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="82c078e7-dae4-4496-b117-920ee8f5c250" isOneWay="false" action="" name="promoteVersion" bindingOperationName="promoteVersion" type="Request-Response" outputName="promoteVersionResponse" inputName="promoteVersion" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4c56d70e-9b74-4c5a-90e5-d6b93b8c733d" isOneWay="false" action="" name="rateDocument" bindingOperationName="rateDocument" type="Request-Response" outputName="rateDocumentResponse" inputName="rateDocument" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="88a1ce4c-5aa7-4e10-82f3-566d56ea6826" isOneWay="false" action="" name="reindex" bindingOperationName="reindex" type="Request-Response" outputName="reindexResponse" inputName="reindex" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d23291f1-a9e3-4102-9e1b-8d9242081518" isOneWay="false" action="" name="rename" bindingOperationName="rename" type="Request-Response" outputName="renameResponse" inputName="rename" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4a8c0262-5d48-4423-9ecf-aaed22656dd4" isOneWay="false" action="" name="replaceFile" bindingOperationName="replaceFile" type="Request-Response" outputName="replaceFileResponse" inputName="replaceFile" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="24ca4bb1-2063-41e6-9c53-c89179a8aadc" isOneWay="false" action="" name="restore" bindingOperationName="restore" type="Request-Response" outputName="restoreResponse" inputName="restore" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f0593bae-f3a3-49f3-9b70-8b9a43f1dbfc" isOneWay="false" action="" name="sendEmail" bindingOperationName="sendEmail" type="Request-Response" outputName="sendEmailResponse" inputName="sendEmail" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ceb2bde1-8f98-4fd8-811f-15262be64112" isOneWay="false" action="" name="setPassword" bindingOperationName="setPassword" type="Request-Response" outputName="setPasswordResponse" inputName="setPassword" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f70fa07-9bc5-44fd-9c20-cbb623747c54" isOneWay="false" action="" name="unlock" bindingOperationName="unlock" type="Request-Response" outputName="unlockResponse" inputName="unlock" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f59c61a3-079d-4c36-a449-498cdfd16449" isOneWay="false" action="" name="unprotect" bindingOperationName="unprotect" type="Request-Response" outputName="unprotectResponse" inputName="unprotect" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b197229b-c80d-4975-8bbe-c701fbc19484" isOneWay="false" action="" name="unsetPassword" bindingOperationName="unsetPassword" type="Request-Response" outputName="unsetPasswordResponse" inputName="unsetPassword" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c9c838c8-16a2-4915-b2fe-222b15d127c3" isOneWay="false" action="" name="update" bindingOperationName="update" type="Request-Response" outputName="updateResponse" inputName="update" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f1958b03-ac0d-4439-8166-84382da8c798" isOneWay="false" action="" name="upload" bindingOperationName="upload" type="Request-Response" outputName="uploadResponse" inputName="upload" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b96661ea-c5d1-4b31-99b2-7d84dd234c88" isOneWay="false" action="" name="uploadResource" bindingOperationName="uploadResource" type="Request-Response" outputName="uploadResourceResponse" inputName="uploadResource" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e0c998f5-a318-47ea-a2ff-0c2ec1ced526" wsaVersion="NONE" name="/DocumentMetadata" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapDocumentMetadataServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/DocumentMetadata?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/DocumentMetadata?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/DocumentMetadata?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapDocumentMetadataServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/DocumentMetadata?wsdl=DocumentMetadata.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapDocumentMetadataServiceServiceSoapBinding" type="ns1:DocumentMetadata">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="listAttributeSets">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listAttributeSets">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listAttributeSetsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listTemplates">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listTemplatesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAttributeSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAttributeSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeOptions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAttributeOptions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAttributeOptionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAttributeSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteAttributeSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteAttributeSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setAttributeOptions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setAttributeOptions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setAttributeOptionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeAttributeSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="storeAttributeSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="storeAttributeSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="storeTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="storeTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTemplate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteTemplate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteTemplateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeSetById">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAttributeSetById">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAttributeSetByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTemplateById">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTemplateById">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTemplateByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapDocumentMetadataServiceService">
    <wsdl:port binding="tns:SoapDocumentMetadataServiceServiceSoapBinding" name="SoapDocumentMetadataServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/DocumentMetadata"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/DocumentMetadata?wsdl=DocumentMetadata.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="DocumentMetadata" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="attribute" type="tns:WSAttribute"/>
      <xs:element name="attributeSet" type="tns:WSAttributeSet"/>
      <xs:element name="deleteAttributeSet" type="tns:deleteAttributeSet"/>
      <xs:element name="deleteAttributeSetResponse" type="tns:deleteAttributeSetResponse"/>
      <xs:element name="deleteTemplate" type="tns:deleteTemplate"/>
      <xs:element name="deleteTemplateResponse" type="tns:deleteTemplateResponse"/>
      <xs:element name="getAttributeOptions" type="tns:getAttributeOptions"/>
      <xs:element name="getAttributeOptionsResponse" type="tns:getAttributeOptionsResponse"/>
      <xs:element name="getAttributeSet" type="tns:getAttributeSet"/>
      <xs:element name="getAttributeSetById" type="tns:getAttributeSetById"/>
      <xs:element name="getAttributeSetByIdResponse" type="tns:getAttributeSetByIdResponse"/>
      <xs:element name="getAttributeSetResponse" type="tns:getAttributeSetResponse"/>
      <xs:element name="getTemplate" type="tns:getTemplate"/>
      <xs:element name="getTemplateById" type="tns:getTemplateById"/>
      <xs:element name="getTemplateByIdResponse" type="tns:getTemplateByIdResponse"/>
      <xs:element name="getTemplateResponse" type="tns:getTemplateResponse"/>
      <xs:element name="listAttributeSets" type="tns:listAttributeSets"/>
      <xs:element name="listAttributeSetsResponse" type="tns:listAttributeSetsResponse"/>
      <xs:element name="listTemplates" type="tns:listTemplates"/>
      <xs:element name="listTemplatesResponse" type="tns:listTemplatesResponse"/>
      <xs:element name="setAttributeOptions" type="tns:setAttributeOptions"/>
      <xs:element name="setAttributeOptionsResponse" type="tns:setAttributeOptionsResponse"/>
      <xs:element name="storeAttributeSet" type="tns:storeAttributeSet"/>
      <xs:element name="storeAttributeSetResponse" type="tns:storeAttributeSetResponse"/>
      <xs:element name="storeTemplate" type="tns:storeTemplate"/>
      <xs:element name="storeTemplateResponse" type="tns:storeTemplateResponse"/>
      <xs:element name="template" type="tns:WSTemplate"/>
      <xs:complexType name="listAttributeSets">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listAttributeSetsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributeSet" type="tns:WSAttributeSet"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttributeSet">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateValue" type="xs:string"/>
          <xs:element minOccurs="0" name="doubleValue" type="xs:double"/>
          <xs:element name="editor" type="xs:int"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element minOccurs="0" name="intValue" type="xs:long"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element name="mandatory" type="xs:int"/>
          <xs:element name="multiple" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="parent" type="xs:string"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
          <xs:element minOccurs="0" name="stringValues" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listTemplates">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listTemplatesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="template" type="tns:WSTemplate"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSTemplate">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element name="docsCount" type="xs:int"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTemplate">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTemplateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="template" type="tns:WSTemplate"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAttributeSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAttributeSetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeSet" type="tns:WSAttributeSet"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAttributeOptions">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="attribute" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAttributeOptionsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteAttributeSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="setId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteAttributeSetResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="setAttributeOptions">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="attribute" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="values" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setAttributeOptionsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="storeAttributeSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeSet" type="tns:WSAttributeSet"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storeAttributeSetResponse">
        <xs:sequence>
          <xs:element name="setId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storeTemplate">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="template" type="tns:WSTemplate"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storeTemplateResponse">
        <xs:sequence>
          <xs:element name="templateId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteTemplate">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="templateId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteTemplateResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getAttributeSetById">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="setId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAttributeSetByIdResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeSet" type="tns:WSAttributeSet"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTemplateById">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="templateId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTemplateByIdResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="template" type="tns:WSTemplate"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="listAttributeSets">
    <wsdl:part element="ns1:listAttributeSets" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listTemplates">
    <wsdl:part element="ns1:listTemplates" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeSet">
    <wsdl:part element="ns1:getAttributeSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTemplateByIdResponse">
    <wsdl:part element="ns1:getTemplateByIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAttributeSet">
    <wsdl:part element="ns1:deleteAttributeSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listAttributeSetsResponse">
    <wsdl:part element="ns1:listAttributeSetsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAttributeSetResponse">
    <wsdl:part element="ns1:deleteAttributeSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeSetResponse">
    <wsdl:part element="ns1:getAttributeSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setAttributeOptions">
    <wsdl:part element="ns1:setAttributeOptions" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeAttributeSet">
    <wsdl:part element="ns1:storeAttributeSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeTemplateResponse">
    <wsdl:part element="ns1:storeTemplateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listTemplatesResponse">
    <wsdl:part element="ns1:listTemplatesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeOptionsResponse">
    <wsdl:part element="ns1:getAttributeOptionsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteTemplate">
    <wsdl:part element="ns1:deleteTemplate" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTemplateById">
    <wsdl:part element="ns1:getTemplateById" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTemplateResponse">
    <wsdl:part element="ns1:getTemplateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTemplate">
    <wsdl:part element="ns1:getTemplate" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setAttributeOptionsResponse">
    <wsdl:part element="ns1:setAttributeOptionsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeSetByIdResponse">
    <wsdl:part element="ns1:getAttributeSetByIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeOptions">
    <wsdl:part element="ns1:getAttributeOptions" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteTemplateResponse">
    <wsdl:part element="ns1:deleteTemplateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeTemplate">
    <wsdl:part element="ns1:storeTemplate" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeAttributeSetResponse">
    <wsdl:part element="ns1:storeAttributeSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeSetById">
    <wsdl:part element="ns1:getAttributeSetById" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="DocumentMetadata">
    <wsdl:operation name="listAttributeSets">
      <wsdl:input message="ns1:listAttributeSets" name="listAttributeSets"></wsdl:input>
      <wsdl:output message="ns1:listAttributeSetsResponse" name="listAttributeSetsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <wsdl:input message="ns1:listTemplates" name="listTemplates"></wsdl:input>
      <wsdl:output message="ns1:listTemplatesResponse" name="listTemplatesResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <wsdl:input message="ns1:getTemplate" name="getTemplate"></wsdl:input>
      <wsdl:output message="ns1:getTemplateResponse" name="getTemplateResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeSet">
      <wsdl:input message="ns1:getAttributeSet" name="getAttributeSet"></wsdl:input>
      <wsdl:output message="ns1:getAttributeSetResponse" name="getAttributeSetResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeOptions">
      <wsdl:input message="ns1:getAttributeOptions" name="getAttributeOptions"></wsdl:input>
      <wsdl:output message="ns1:getAttributeOptionsResponse" name="getAttributeOptionsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAttributeSet">
      <wsdl:input message="ns1:deleteAttributeSet" name="deleteAttributeSet"></wsdl:input>
      <wsdl:output message="ns1:deleteAttributeSetResponse" name="deleteAttributeSetResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setAttributeOptions">
      <wsdl:input message="ns1:setAttributeOptions" name="setAttributeOptions"></wsdl:input>
      <wsdl:output message="ns1:setAttributeOptionsResponse" name="setAttributeOptionsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeAttributeSet">
      <wsdl:input message="ns1:storeAttributeSet" name="storeAttributeSet"></wsdl:input>
      <wsdl:output message="ns1:storeAttributeSetResponse" name="storeAttributeSetResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeTemplate">
      <wsdl:input message="ns1:storeTemplate" name="storeTemplate"></wsdl:input>
      <wsdl:output message="ns1:storeTemplateResponse" name="storeTemplateResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTemplate">
      <wsdl:input message="ns1:deleteTemplate" name="deleteTemplate"></wsdl:input>
      <wsdl:output message="ns1:deleteTemplateResponse" name="deleteTemplateResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeSetById">
      <wsdl:input message="ns1:getAttributeSetById" name="getAttributeSetById"></wsdl:input>
      <wsdl:output message="ns1:getAttributeSetByIdResponse" name="getAttributeSetByIdResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTemplateById">
      <wsdl:input message="ns1:getTemplateById" name="getTemplateById"></wsdl:input>
      <wsdl:output message="ns1:getTemplateByIdResponse" name="getTemplateByIdResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/DocumentMetadata</con:endpoint></con:endpoints><con:operation id="51b790ba-6138-42ec-baa0-23a0be22b2e1" isOneWay="false" action="" name="deleteAttributeSet" bindingOperationName="deleteAttributeSet" type="Request-Response" outputName="deleteAttributeSetResponse" inputName="deleteAttributeSet" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ea90d98b-1f85-4dc4-979f-40372a01e4b8" isOneWay="false" action="" name="deleteTemplate" bindingOperationName="deleteTemplate" type="Request-Response" outputName="deleteTemplateResponse" inputName="deleteTemplate" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c8146646-23f5-4a58-961f-801e488fb636" isOneWay="false" action="" name="getAttributeOptions" bindingOperationName="getAttributeOptions" type="Request-Response" outputName="getAttributeOptionsResponse" inputName="getAttributeOptions" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6efc57e7-0c17-45a7-aeb9-dbabd249aabb" isOneWay="false" action="" name="getAttributeSet" bindingOperationName="getAttributeSet" type="Request-Response" outputName="getAttributeSetResponse" inputName="getAttributeSet" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0c9840b2-42db-4afe-8bff-a5aa0f4efe50" isOneWay="false" action="" name="getAttributeSetById" bindingOperationName="getAttributeSetById" type="Request-Response" outputName="getAttributeSetByIdResponse" inputName="getAttributeSetById" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ac222ecf-1ae1-4895-afd8-fbe9ade3eb1b" isOneWay="false" action="" name="getTemplate" bindingOperationName="getTemplate" type="Request-Response" outputName="getTemplateResponse" inputName="getTemplate" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d8979932-9cf5-48cc-aad8-e39ac2fa11f9" isOneWay="false" action="" name="getTemplateById" bindingOperationName="getTemplateById" type="Request-Response" outputName="getTemplateByIdResponse" inputName="getTemplateById" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3b66e25a-b075-4aca-9ecf-5581ff7fe24d" isOneWay="false" action="" name="listAttributeSets" bindingOperationName="listAttributeSets" type="Request-Response" outputName="listAttributeSetsResponse" inputName="listAttributeSets" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d0e9b4be-3c58-49e7-9129-02971c30e545" isOneWay="false" action="" name="listTemplates" bindingOperationName="listTemplates" type="Request-Response" outputName="listTemplatesResponse" inputName="listTemplates" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="93b477e7-8383-4f2e-ac46-86e75317142b" isOneWay="false" action="" name="setAttributeOptions" bindingOperationName="setAttributeOptions" type="Request-Response" outputName="setAttributeOptionsResponse" inputName="setAttributeOptions" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1a56a28d-1a44-4388-856a-828b175ba705" isOneWay="false" action="" name="storeAttributeSet" bindingOperationName="storeAttributeSet" type="Request-Response" outputName="storeAttributeSetResponse" inputName="storeAttributeSet" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="be741d38-df4e-4dac-bd8a-6090bbf7459e" isOneWay="false" action="" name="storeTemplate" bindingOperationName="storeTemplate" type="Request-Response" outputName="storeTemplateResponse" inputName="storeTemplate" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9be65846-b219-4e10-aa84-2ccc5af7b6d6" wsaVersion="NONE" name="/Folder" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapFolderServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Folder?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Folder?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Folder?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapFolderServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Folder?wsdl=Folder.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapFolderServiceServiceSoapBinding" type="ns1:Folder">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="move">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="move">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="moveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedUsers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGrantedUsers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGrantedUsersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findByPath">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findByPath">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findByPathResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkspaces">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listWorkspaces">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listWorkspacesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="update">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="grantUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="grantUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="grantUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="delete">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGrantedGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGrantedGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultWorkspace">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDefaultWorkspace">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDefaultWorkspaceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rename">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="rename">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="renameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="grantGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="grantGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="grantGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isGranted">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isGranted">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isGrantedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPath">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPath">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPathResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="create">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="create">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="copy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="copyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPath">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createPath">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createPathResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadable">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isReadable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isReadableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAlias">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createAlias">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAliasResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRootFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRootFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRootFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listChildren">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listChildren">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listChildrenResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isWriteable">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isWriteable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isWriteableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapFolderServiceService">
    <wsdl:port binding="tns:SoapFolderServiceServiceSoapBinding" name="SoapFolderServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Folder"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Folder?wsdl=Folder.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Folder" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="attribute" type="tns:WSAttribute"/>
      <xs:element name="copy" type="tns:copy"/>
      <xs:element name="copyResponse" type="tns:copyResponse"/>
      <xs:element name="create" type="tns:create"/>
      <xs:element name="createAlias" type="tns:createAlias"/>
      <xs:element name="createAliasResponse" type="tns:createAliasResponse"/>
      <xs:element name="createFolder" type="tns:createFolder"/>
      <xs:element name="createFolderResponse" type="tns:createFolderResponse"/>
      <xs:element name="createPath" type="tns:createPath"/>
      <xs:element name="createPathResponse" type="tns:createPathResponse"/>
      <xs:element name="createResponse" type="tns:createResponse"/>
      <xs:element name="delete" type="tns:delete"/>
      <xs:element name="deleteResponse" type="tns:deleteResponse"/>
      <xs:element name="findByPath" type="tns:findByPath"/>
      <xs:element name="findByPathResponse" type="tns:findByPathResponse"/>
      <xs:element name="folder" type="tns:WSFolder"/>
      <xs:element name="getDefaultWorkspace" type="tns:getDefaultWorkspace"/>
      <xs:element name="getDefaultWorkspaceResponse" type="tns:getDefaultWorkspaceResponse"/>
      <xs:element name="getFolder" type="tns:getFolder"/>
      <xs:element name="getFolderResponse" type="tns:getFolderResponse"/>
      <xs:element name="getGrantedGroups" type="tns:getGrantedGroups"/>
      <xs:element name="getGrantedGroupsResponse" type="tns:getGrantedGroupsResponse"/>
      <xs:element name="getGrantedUsers" type="tns:getGrantedUsers"/>
      <xs:element name="getGrantedUsersResponse" type="tns:getGrantedUsersResponse"/>
      <xs:element name="getPath" type="tns:getPath"/>
      <xs:element name="getPathResponse" type="tns:getPathResponse"/>
      <xs:element name="getRootFolder" type="tns:getRootFolder"/>
      <xs:element name="getRootFolderResponse" type="tns:getRootFolderResponse"/>
      <xs:element name="grantGroup" type="tns:grantGroup"/>
      <xs:element name="grantGroupResponse" type="tns:grantGroupResponse"/>
      <xs:element name="grantUser" type="tns:grantUser"/>
      <xs:element name="grantUserResponse" type="tns:grantUserResponse"/>
      <xs:element name="isGranted" type="tns:isGranted"/>
      <xs:element name="isGrantedResponse" type="tns:isGrantedResponse"/>
      <xs:element name="isReadable" type="tns:isReadable"/>
      <xs:element name="isReadableResponse" type="tns:isReadableResponse"/>
      <xs:element name="isWriteable" type="tns:isWriteable"/>
      <xs:element name="isWriteableResponse" type="tns:isWriteableResponse"/>
      <xs:element name="listChildren" type="tns:listChildren"/>
      <xs:element name="listChildrenResponse" type="tns:listChildrenResponse"/>
      <xs:element name="listWorkspaces" type="tns:listWorkspaces"/>
      <xs:element name="listWorkspacesResponse" type="tns:listWorkspacesResponse"/>
      <xs:element name="move" type="tns:move"/>
      <xs:element name="moveResponse" type="tns:moveResponse"/>
      <xs:element name="rename" type="tns:rename"/>
      <xs:element name="renameResponse" type="tns:renameResponse"/>
      <xs:element name="update" type="tns:update"/>
      <xs:element name="updateResponse" type="tns:updateResponse"/>
      <xs:complexType name="move">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="parentId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moveResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="findByPath">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findByPathResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSFolder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="foldRef" type="xs:long"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="securityRef" type="xs:long"/>
          <xs:element minOccurs="0" name="storage" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element name="templateLocked" type="xs:int"/>
          <xs:element name="type" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateValue" type="xs:string"/>
          <xs:element minOccurs="0" name="doubleValue" type="xs:double"/>
          <xs:element name="editor" type="xs:int"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element minOccurs="0" name="intValue" type="xs:long"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element name="mandatory" type="xs:int"/>
          <xs:element name="multiple" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="parent" type="xs:string"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
          <xs:element minOccurs="0" name="stringValues" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGrantedUsers">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGrantedUsersResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:WSRight"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSRight">
        <xs:sequence>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="permissions" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listWorkspaces">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listWorkspacesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="workspaces" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="grantUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="userId" type="xs:long"/>
          <xs:element name="permissions" type="xs:int"/>
          <xs:element name="recursive" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="grantUserResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="delete">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getGrantedGroups">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGrantedGroupsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:WSRight"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDefaultWorkspace">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDefaultWorkspaceResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="workspace" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFolderResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rename">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renameResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="grantGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="groupId" type="xs:long"/>
          <xs:element name="permissions" type="xs:int"/>
          <xs:element name="recursive" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="grantGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="isGranted">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="permission" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isGrantedResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPath">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPathResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="folders" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="create">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="copy">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="targetId" type="xs:long"/>
          <xs:element name="foldersOnly" type="xs:int"/>
          <xs:element name="inheritSecurity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="copyResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createFolderResponse">
        <xs:sequence>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPath">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPathResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isReadable">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isReadableResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createAlias">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="arg1" type="xs:long"/>
          <xs:element name="arg2" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createAliasResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRootFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRootFolderResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listChildren">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listChildrenResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isWriteable">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isWriteableResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getGrantedUsersResponse">
    <wsdl:part element="ns1:getGrantedUsersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGrantedGroupsResponse">
    <wsdl:part element="ns1:getGrantedGroupsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPathResponse">
    <wsdl:part element="ns1:getPathResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findByPath">
    <wsdl:part element="ns1:findByPath" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listWorkspaces">
    <wsdl:part element="ns1:listWorkspaces" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="update">
    <wsdl:part element="ns1:update" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="moveResponse">
    <wsdl:part element="ns1:moveResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findByPathResponse">
    <wsdl:part element="ns1:findByPathResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="grantUser">
    <wsdl:part element="ns1:grantUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="delete">
    <wsdl:part element="ns1:delete" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFolder">
    <wsdl:part element="ns1:getFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadableResponse">
    <wsdl:part element="ns1:isReadableResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteResponse">
    <wsdl:part element="ns1:deleteResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="grantGroup">
    <wsdl:part element="ns1:grantGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFolderResponse">
    <wsdl:part element="ns1:getFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameResponse">
    <wsdl:part element="ns1:renameResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isGranted">
    <wsdl:part element="ns1:isGranted" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPath">
    <wsdl:part element="ns1:getPath" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="create">
    <wsdl:part element="ns1:create" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="copy">
    <wsdl:part element="ns1:copy" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFolder">
    <wsdl:part element="ns1:createFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPath">
    <wsdl:part element="ns1:createPath" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAlias">
    <wsdl:part element="ns1:createAlias" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isWriteable">
    <wsdl:part element="ns1:isWriteable" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isGrantedResponse">
    <wsdl:part element="ns1:isGrantedResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFolderResponse">
    <wsdl:part element="ns1:createFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRootFolderResponse">
    <wsdl:part element="ns1:getRootFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="move">
    <wsdl:part element="ns1:move" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAliasResponse">
    <wsdl:part element="ns1:createAliasResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isWriteableResponse">
    <wsdl:part element="ns1:isWriteableResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPathResponse">
    <wsdl:part element="ns1:createPathResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGrantedUsers">
    <wsdl:part element="ns1:getGrantedUsers" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createResponse">
    <wsdl:part element="ns1:createResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultWorkspaceResponse">
    <wsdl:part element="ns1:getDefaultWorkspaceResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGrantedGroups">
    <wsdl:part element="ns1:getGrantedGroups" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listWorkspacesResponse">
    <wsdl:part element="ns1:listWorkspacesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultWorkspace">
    <wsdl:part element="ns1:getDefaultWorkspace" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="grantUserResponse">
    <wsdl:part element="ns1:grantUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="copyResponse">
    <wsdl:part element="ns1:copyResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rename">
    <wsdl:part element="ns1:rename" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="grantGroupResponse">
    <wsdl:part element="ns1:grantGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listChildrenResponse">
    <wsdl:part element="ns1:listChildrenResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadable">
    <wsdl:part element="ns1:isReadable" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateResponse">
    <wsdl:part element="ns1:updateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRootFolder">
    <wsdl:part element="ns1:getRootFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listChildren">
    <wsdl:part element="ns1:listChildren" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Folder">
    <wsdl:operation name="move">
      <wsdl:input message="ns1:move" name="move"></wsdl:input>
      <wsdl:output message="ns1:moveResponse" name="moveResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findByPath">
      <wsdl:input message="ns1:findByPath" name="findByPath"></wsdl:input>
      <wsdl:output message="ns1:findByPathResponse" name="findByPathResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedUsers">
      <wsdl:input message="ns1:getGrantedUsers" name="getGrantedUsers"></wsdl:input>
      <wsdl:output message="ns1:getGrantedUsersResponse" name="getGrantedUsersResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkspaces">
      <wsdl:input message="ns1:listWorkspaces" name="listWorkspaces"></wsdl:input>
      <wsdl:output message="ns1:listWorkspacesResponse" name="listWorkspacesResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="ns1:update" name="update"></wsdl:input>
      <wsdl:output message="ns1:updateResponse" name="updateResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="grantUser">
      <wsdl:input message="ns1:grantUser" name="grantUser"></wsdl:input>
      <wsdl:output message="ns1:grantUserResponse" name="grantUserResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="ns1:delete" name="delete"></wsdl:input>
      <wsdl:output message="ns1:deleteResponse" name="deleteResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedGroups">
      <wsdl:input message="ns1:getGrantedGroups" name="getGrantedGroups"></wsdl:input>
      <wsdl:output message="ns1:getGrantedGroupsResponse" name="getGrantedGroupsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultWorkspace">
      <wsdl:input message="ns1:getDefaultWorkspace" name="getDefaultWorkspace"></wsdl:input>
      <wsdl:output message="ns1:getDefaultWorkspaceResponse" name="getDefaultWorkspaceResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFolder">
      <wsdl:input message="ns1:getFolder" name="getFolder"></wsdl:input>
      <wsdl:output message="ns1:getFolderResponse" name="getFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rename">
      <wsdl:input message="ns1:rename" name="rename"></wsdl:input>
      <wsdl:output message="ns1:renameResponse" name="renameResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="grantGroup">
      <wsdl:input message="ns1:grantGroup" name="grantGroup"></wsdl:input>
      <wsdl:output message="ns1:grantGroupResponse" name="grantGroupResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isGranted">
      <wsdl:input message="ns1:isGranted" name="isGranted"></wsdl:input>
      <wsdl:output message="ns1:isGrantedResponse" name="isGrantedResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPath">
      <wsdl:input message="ns1:getPath" name="getPath"></wsdl:input>
      <wsdl:output message="ns1:getPathResponse" name="getPathResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="create">
      <wsdl:input message="ns1:create" name="create"></wsdl:input>
      <wsdl:output message="ns1:createResponse" name="createResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copy">
      <wsdl:input message="ns1:copy" name="copy"></wsdl:input>
      <wsdl:output message="ns1:copyResponse" name="copyResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFolder">
      <wsdl:input message="ns1:createFolder" name="createFolder"></wsdl:input>
      <wsdl:output message="ns1:createFolderResponse" name="createFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPath">
      <wsdl:input message="ns1:createPath" name="createPath"></wsdl:input>
      <wsdl:output message="ns1:createPathResponse" name="createPathResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadable">
      <wsdl:input message="ns1:isReadable" name="isReadable"></wsdl:input>
      <wsdl:output message="ns1:isReadableResponse" name="isReadableResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAlias">
      <wsdl:input message="ns1:createAlias" name="createAlias"></wsdl:input>
      <wsdl:output message="ns1:createAliasResponse" name="createAliasResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRootFolder">
      <wsdl:input message="ns1:getRootFolder" name="getRootFolder"></wsdl:input>
      <wsdl:output message="ns1:getRootFolderResponse" name="getRootFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listChildren">
      <wsdl:input message="ns1:listChildren" name="listChildren"></wsdl:input>
      <wsdl:output message="ns1:listChildrenResponse" name="listChildrenResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isWriteable">
      <wsdl:input message="ns1:isWriteable" name="isWriteable"></wsdl:input>
      <wsdl:output message="ns1:isWriteableResponse" name="isWriteableResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint></con:endpoints><con:operation id="2b10735e-3fef-4549-8f9c-63c9e4e44873" isOneWay="false" action="" name="copy" bindingOperationName="copy" type="Request-Response" outputName="copyResponse" inputName="copy" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66ce0f0d-8171-444a-88f4-6a753b5b9558" isOneWay="false" action="" name="create" bindingOperationName="create" type="Request-Response" outputName="createResponse" inputName="create" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6c660943-bd08-4281-ad76-e39b9b9608f1" isOneWay="false" action="" name="createAlias" bindingOperationName="createAlias" type="Request-Response" outputName="createAliasResponse" inputName="createAlias" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d6ae1af-f66d-49ce-8fda-91600046a74f" isOneWay="false" action="" name="createFolder" bindingOperationName="createFolder" type="Request-Response" outputName="createFolderResponse" inputName="createFolder" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eb8eea76-a232-4869-b91b-2f1daf6f4a06" isOneWay="false" action="" name="createPath" bindingOperationName="createPath" type="Request-Response" outputName="createPathResponse" inputName="createPath" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c33c5d70-26e6-4130-9e0f-5d445bbfdb45" isOneWay="false" action="" name="delete" bindingOperationName="delete" type="Request-Response" outputName="deleteResponse" inputName="delete" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12d2464f-5ab0-4697-b719-562aaa630f53" isOneWay="false" action="" name="findByPath" bindingOperationName="findByPath" type="Request-Response" outputName="findByPathResponse" inputName="findByPath" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5133c167-d270-4bee-b33d-684b7c67bed4" isOneWay="false" action="" name="getDefaultWorkspace" bindingOperationName="getDefaultWorkspace" type="Request-Response" outputName="getDefaultWorkspaceResponse" inputName="getDefaultWorkspace" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d07da1c9-a111-49a7-b6e7-8cec4832fa9c" isOneWay="false" action="" name="getFolder" bindingOperationName="getFolder" type="Request-Response" outputName="getFolderResponse" inputName="getFolder" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e70724a6-b0bc-4709-9a40-9a6e05c6137c" isOneWay="false" action="" name="getGrantedGroups" bindingOperationName="getGrantedGroups" type="Request-Response" outputName="getGrantedGroupsResponse" inputName="getGrantedGroups" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="74b0689a-8957-448d-9ac4-40e670d297c2" isOneWay="false" action="" name="getGrantedUsers" bindingOperationName="getGrantedUsers" type="Request-Response" outputName="getGrantedUsersResponse" inputName="getGrantedUsers" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12a26a37-091e-4175-8cdf-088bb555cbd1" isOneWay="false" action="" name="getPath" bindingOperationName="getPath" type="Request-Response" outputName="getPathResponse" inputName="getPath" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2be3aa16-ed9e-4148-8de2-b0da1a12eaf7" isOneWay="false" action="" name="getRootFolder" bindingOperationName="getRootFolder" type="Request-Response" outputName="getRootFolderResponse" inputName="getRootFolder" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1c630807-e217-4f64-bd06-0710e98a2eae" isOneWay="false" action="" name="grantGroup" bindingOperationName="grantGroup" type="Request-Response" outputName="grantGroupResponse" inputName="grantGroup" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="863f36dc-2470-44a6-b30e-37d0c3cb2668" isOneWay="false" action="" name="grantUser" bindingOperationName="grantUser" type="Request-Response" outputName="grantUserResponse" inputName="grantUser" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a8c7cb62-9354-4bae-b66c-0dfd2c50bd84" isOneWay="false" action="" name="isGranted" bindingOperationName="isGranted" type="Request-Response" outputName="isGrantedResponse" inputName="isGranted" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5fb10a08-df77-45ff-a9d5-6d9a610f58a3" isOneWay="false" action="" name="isReadable" bindingOperationName="isReadable" type="Request-Response" outputName="isReadableResponse" inputName="isReadable" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff2b05ea-6ab2-463b-bdf6-02e3a22aaeb3" isOneWay="false" action="" name="isWriteable" bindingOperationName="isWriteable" type="Request-Response" outputName="isWriteableResponse" inputName="isWriteable" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="87ef2162-c6d2-4f9d-ae70-52fa5a2341ff" isOneWay="false" action="" name="listChildren" bindingOperationName="listChildren" type="Request-Response" outputName="listChildrenResponse" inputName="listChildren" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="db77e3f5-dc83-4e08-8ccd-9ea840e7826d" isOneWay="false" action="" name="listWorkspaces" bindingOperationName="listWorkspaces" type="Request-Response" outputName="listWorkspacesResponse" inputName="listWorkspaces" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="636dde7b-6d4d-4330-9a94-e358520056ce" isOneWay="false" action="" name="move" bindingOperationName="move" type="Request-Response" outputName="moveResponse" inputName="move" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f424ede-fe96-4ab1-ab2d-fac71f58ac36" isOneWay="false" action="" name="rename" bindingOperationName="rename" type="Request-Response" outputName="renameResponse" inputName="rename" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1af72225-6ef9-48ff-b897-8e26356168d4" isOneWay="false" action="" name="update" bindingOperationName="update" type="Request-Response" outputName="updateResponse" inputName="update" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6ab05617-bd5f-4b1a-bfe5-83568ace7276" wsaVersion="NONE" name="/Search" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapSearchServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Search?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Search?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Search?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapSearchServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Search?wsdl=Search.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapSearchServiceServiceSoapBinding" type="ns1:Search">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="findByFilename">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findByFilename">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findByFilenameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="find">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="find">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findFolders">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findFolders">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findFoldersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapSearchServiceService">
    <wsdl:port binding="tns:SoapSearchServiceServiceSoapBinding" name="SoapSearchServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Search"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Search?wsdl=Search.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Search" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="attribute" type="tns:WSAttribute"/>
      <xs:element name="document" type="tns:WSDocument"/>
      <xs:element name="find" type="tns:find"/>
      <xs:element name="findByFilename" type="tns:findByFilename"/>
      <xs:element name="findByFilenameResponse" type="tns:findByFilenameResponse"/>
      <xs:element name="findFolders" type="tns:findFolders"/>
      <xs:element name="findFoldersResponse" type="tns:findFoldersResponse"/>
      <xs:element name="findResponse" type="tns:findResponse"/>
      <xs:element name="folder" type="tns:WSFolder"/>
      <xs:element name="searchoptions" type="tns:WSSearchOptions"/>
      <xs:complexType name="findByFilename">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="filename" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findByFilenameResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDocument">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element name="creatorId" type="xs:long"/>
          <xs:element minOccurs="0" name="customId" type="xs:string"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteUserId" type="xs:long"/>
          <xs:element minOccurs="0" name="digest" type="xs:string"/>
          <xs:element minOccurs="0" name="docRef" type="xs:long"/>
          <xs:element minOccurs="0" name="docRefType" type="xs:string"/>
          <xs:element minOccurs="0" name="exportId" type="xs:long"/>
          <xs:element minOccurs="0" name="exportName" type="xs:string"/>
          <xs:element name="exportStatus" type="xs:int"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element name="fileSize" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="formId" type="xs:long"/>
          <xs:element minOccurs="0" name="icon" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="immutable" type="xs:int"/>
          <xs:element name="indexed" type="xs:int"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="lockUserId" type="xs:long"/>
          <xs:element name="nature" type="xs:int"/>
          <xs:element name="pages" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordProtected" type="xs:int"/>
          <xs:element name="published" type="xs:int"/>
          <xs:element minOccurs="0" name="publisher" type="xs:string"/>
          <xs:element name="publisherId" type="xs:long"/>
          <xs:element minOccurs="0" name="rating" type="xs:int"/>
          <xs:element minOccurs="0" name="score" type="xs:int"/>
          <xs:element name="signed" type="xs:int"/>
          <xs:element name="stamped" type="xs:int"/>
          <xs:element minOccurs="0" name="startPublishing" type="xs:string"/>
          <xs:element name="status" type="xs:int"/>
          <xs:element minOccurs="0" name="stopPublishing" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowStatus" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowStatusDisplay" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateValue" type="xs:string"/>
          <xs:element minOccurs="0" name="doubleValue" type="xs:double"/>
          <xs:element name="editor" type="xs:int"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element minOccurs="0" name="intValue" type="xs:long"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element name="mandatory" type="xs:int"/>
          <xs:element name="multiple" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="parent" type="xs:string"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
          <xs:element minOccurs="0" name="stringValues" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="find">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:WSSearchOptions"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSSearchOptions">
        <xs:sequence>
          <xs:element name="caseSensitive" type="xs:int"/>
          <xs:element minOccurs="0" name="creationFrom" type="xs:string"/>
          <xs:element minOccurs="0" name="creationTo" type="xs:string"/>
          <xs:element minOccurs="0" name="dateFrom" type="xs:string"/>
          <xs:element minOccurs="0" name="dateTo" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="expression" type="xs:string"/>
          <xs:element minOccurs="0" name="expressionLanguage" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="fields" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="filterIds" nillable="true" type="xs:long"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="format" type="xs:string"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element name="maxHits" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="retrieveAliases" type="xs:int"/>
          <xs:element name="searchInSubPath" type="xs:int"/>
          <xs:element minOccurs="0" name="sizeMax" type="xs:long"/>
          <xs:element minOccurs="0" name="sizeMin" type="xs:long"/>
          <xs:element minOccurs="0" name="template" type="xs:long"/>
          <xs:element minOccurs="0" name="topOperator" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="searchResult" type="tns:WSSearchResult"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSSearchResult">
        <xs:sequence>
          <xs:element name="estimatedHitsNumber" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="hits" nillable="true" type="tns:WSDocument"/>
          <xs:element name="moreHits" type="xs:int"/>
          <xs:element name="time" type="xs:long"/>
          <xs:element name="totalHits" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findFolders">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findFoldersResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSFolder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="foldRef" type="xs:long"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="securityRef" type="xs:long"/>
          <xs:element minOccurs="0" name="storage" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element name="templateLocked" type="xs:int"/>
          <xs:element name="type" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="findByFilenameResponse">
    <wsdl:part element="ns1:findByFilenameResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="find">
    <wsdl:part element="ns1:find" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findFolders">
    <wsdl:part element="ns1:findFolders" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findByFilename">
    <wsdl:part element="ns1:findByFilename" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findResponse">
    <wsdl:part element="ns1:findResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findFoldersResponse">
    <wsdl:part element="ns1:findFoldersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Search">
    <wsdl:operation name="findByFilename">
      <wsdl:input message="ns1:findByFilename" name="findByFilename"></wsdl:input>
      <wsdl:output message="ns1:findByFilenameResponse" name="findByFilenameResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="find">
      <wsdl:input message="ns1:find" name="find"></wsdl:input>
      <wsdl:output message="ns1:findResponse" name="findResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findFolders">
      <wsdl:input message="ns1:findFolders" name="findFolders"></wsdl:input>
      <wsdl:output message="ns1:findFoldersResponse" name="findFoldersResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Search</con:endpoint></con:endpoints><con:operation id="f102ad83-2d20-42e5-aa66-99740cd76e7f" isOneWay="false" action="" name="find" bindingOperationName="find" type="Request-Response" outputName="findResponse" inputName="find" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed653912-d538-4bf7-802a-caa021ac25be" isOneWay="false" action="" name="findByFilename" bindingOperationName="findByFilename" type="Request-Response" outputName="findByFilenameResponse" inputName="findByFilename" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b6fc61a6-62eb-4df9-9461-a1e5c6e0bcf3" isOneWay="false" action="" name="findFolders" bindingOperationName="findFolders" type="Request-Response" outputName="findFoldersResponse" inputName="findFolders" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b40e3b6d-458b-427c-9d09-403e72797ac6" wsaVersion="NONE" name="/Security" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapSecurityServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Security?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Security?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Security?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapSecurityServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Security?wsdl=Security.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapSecurityServiceServiceSoapBinding" type="ns1:Security">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getUserByUsername">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserByUsername">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserByUsernameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listUsers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listUsersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="storeUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="storeUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="storeGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="storeGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="changePassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="changePasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapSecurityServiceService">
    <wsdl:port binding="tns:SoapSecurityServiceServiceSoapBinding" name="SoapSecurityServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Security"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Security?wsdl=Security.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Security" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="changePassword" type="tns:changePassword"/>
      <xs:element name="changePasswordResponse" type="tns:changePasswordResponse"/>
      <xs:element name="deleteGroup" type="tns:deleteGroup"/>
      <xs:element name="deleteGroupResponse" type="tns:deleteGroupResponse"/>
      <xs:element name="deleteUser" type="tns:deleteUser"/>
      <xs:element name="deleteUserResponse" type="tns:deleteUserResponse"/>
      <xs:element name="getGroup" type="tns:getGroup"/>
      <xs:element name="getGroupResponse" type="tns:getGroupResponse"/>
      <xs:element name="getUser" type="tns:getUser"/>
      <xs:element name="getUserByUsername" type="tns:getUserByUsername"/>
      <xs:element name="getUserByUsernameResponse" type="tns:getUserByUsernameResponse"/>
      <xs:element name="getUserResponse" type="tns:getUserResponse"/>
      <xs:element name="listGroups" type="tns:listGroups"/>
      <xs:element name="listGroupsResponse" type="tns:listGroupsResponse"/>
      <xs:element name="listUsers" type="tns:listUsers"/>
      <xs:element name="listUsersResponse" type="tns:listUsersResponse"/>
      <xs:element name="storeGroup" type="tns:storeGroup"/>
      <xs:element name="storeGroupResponse" type="tns:storeGroupResponse"/>
      <xs:element name="storeUser" type="tns:storeUser"/>
      <xs:element name="storeUserResponse" type="tns:storeUserResponse"/>
      <xs:complexType name="getUserByUsername">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserByUsernameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="user" type="tns:WSUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="city" type="xs:string"/>
          <xs:element minOccurs="0" name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="email2" type="xs:string"/>
          <xs:element minOccurs="0" name="emailSignature" type="xs:string"/>
          <xs:element minOccurs="0" name="emailSignature2" type="xs:string"/>
          <xs:element name="enabled" type="xs:int"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groupIds" nillable="true" type="xs:long"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordChanged" type="xs:string"/>
          <xs:element name="passwordExpires" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordmd4" type="xs:string"/>
          <xs:element minOccurs="0" name="postalcode" type="xs:string"/>
          <xs:element name="quota" type="xs:long"/>
          <xs:element name="quotaCount" type="xs:long"/>
          <xs:element name="source" type="xs:int"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
          <xs:element minOccurs="0" name="street" type="xs:string"/>
          <xs:element minOccurs="0" name="telephone" type="xs:string"/>
          <xs:element minOccurs="0" name="telephone2" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listUsers">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="group" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listUsersResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="user" type="tns:WSUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storeUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="user" type="tns:WSUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storeUserResponse">
        <xs:sequence>
          <xs:element name="userId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="groupId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGroupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="group" type="tns:WSGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="inheritGroupId" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="source" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userIds" nillable="true" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="userId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="user" type="tns:WSUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="userId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteUserResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="listGroups">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listGroupsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="group" type="tns:WSGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="groupId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="storeGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="group" type="tns:WSGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storeGroupResponse">
        <xs:sequence>
          <xs:element name="groupId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changePassword">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="userId" type="xs:long"/>
          <xs:element minOccurs="0" name="oldPassword" type="xs:string"/>
          <xs:element minOccurs="0" name="newPassword" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changePasswordResponse">
        <xs:sequence>
          <xs:element name="changeResult" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getUserByUsernameResponse">
    <wsdl:part element="ns1:getUserByUsernameResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserResponse">
    <wsdl:part element="ns1:getUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="changePasswordResponse">
    <wsdl:part element="ns1:changePasswordResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByUsername">
    <wsdl:part element="ns1:getUserByUsername" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupResponse">
    <wsdl:part element="ns1:getGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUser">
    <wsdl:part element="ns1:getUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="changePassword">
    <wsdl:part element="ns1:changePassword" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listGroupsResponse">
    <wsdl:part element="ns1:listGroupsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listUsersResponse">
    <wsdl:part element="ns1:listUsersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeUserResponse">
    <wsdl:part element="ns1:storeUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listUsers">
    <wsdl:part element="ns1:listUsers" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeUser">
    <wsdl:part element="ns1:storeUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroup">
    <wsdl:part element="ns1:getGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUser">
    <wsdl:part element="ns1:deleteUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listGroups">
    <wsdl:part element="ns1:listGroups" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroupResponse">
    <wsdl:part element="ns1:deleteGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroup">
    <wsdl:part element="ns1:deleteGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeGroupResponse">
    <wsdl:part element="ns1:storeGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse">
    <wsdl:part element="ns1:deleteUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeGroup">
    <wsdl:part element="ns1:storeGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Security">
    <wsdl:operation name="getUserByUsername">
      <wsdl:input message="ns1:getUserByUsername" name="getUserByUsername"></wsdl:input>
      <wsdl:output message="ns1:getUserByUsernameResponse" name="getUserByUsernameResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <wsdl:input message="ns1:listUsers" name="listUsers"></wsdl:input>
      <wsdl:output message="ns1:listUsersResponse" name="listUsersResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeUser">
      <wsdl:input message="ns1:storeUser" name="storeUser"></wsdl:input>
      <wsdl:output message="ns1:storeUserResponse" name="storeUserResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <wsdl:input message="ns1:getGroup" name="getGroup"></wsdl:input>
      <wsdl:output message="ns1:getGroupResponse" name="getGroupResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUser">
      <wsdl:input message="ns1:getUser" name="getUser"></wsdl:input>
      <wsdl:output message="ns1:getUserResponse" name="getUserResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="ns1:deleteUser" name="deleteUser"></wsdl:input>
      <wsdl:output message="ns1:deleteUserResponse" name="deleteUserResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listGroups">
      <wsdl:input message="ns1:listGroups" name="listGroups"></wsdl:input>
      <wsdl:output message="ns1:listGroupsResponse" name="listGroupsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <wsdl:input message="ns1:deleteGroup" name="deleteGroup"></wsdl:input>
      <wsdl:output message="ns1:deleteGroupResponse" name="deleteGroupResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeGroup">
      <wsdl:input message="ns1:storeGroup" name="storeGroup"></wsdl:input>
      <wsdl:output message="ns1:storeGroupResponse" name="storeGroupResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <wsdl:input message="ns1:changePassword" name="changePassword"></wsdl:input>
      <wsdl:output message="ns1:changePasswordResponse" name="changePasswordResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint></con:endpoints><con:operation id="d7b83531-2ca8-4649-ada2-3ce0cf7c579f" isOneWay="false" action="" name="changePassword" bindingOperationName="changePassword" type="Request-Response" outputName="changePasswordResponse" inputName="changePassword" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3a18a82-af32-44e2-b6d4-a93213f64a94" isOneWay="false" action="" name="deleteGroup" bindingOperationName="deleteGroup" type="Request-Response" outputName="deleteGroupResponse" inputName="deleteGroup" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4e111e36-24d5-40d5-8962-a8f457f885b0" isOneWay="false" action="" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" outputName="deleteUserResponse" inputName="deleteUser" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c60c9c3a-c0f4-4dcb-a36a-bfa4c50f8ece" isOneWay="false" action="" name="getGroup" bindingOperationName="getGroup" type="Request-Response" outputName="getGroupResponse" inputName="getGroup" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7e097322-f387-4041-9955-b05430450e40" isOneWay="false" action="" name="getUser" bindingOperationName="getUser" type="Request-Response" outputName="getUserResponse" inputName="getUser" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3ed9b259-d277-40dd-ab81-9b4eab4f9750" isOneWay="false" action="" name="getUserByUsername" bindingOperationName="getUserByUsername" type="Request-Response" outputName="getUserByUsernameResponse" inputName="getUserByUsername" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="15e17402-5bfd-4b1f-bbd8-44207d31a5d3" isOneWay="false" action="" name="listGroups" bindingOperationName="listGroups" type="Request-Response" outputName="listGroupsResponse" inputName="listGroups" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e34017b1-f5ab-4d21-ad58-e6e29ce34d7c" isOneWay="false" action="" name="listUsers" bindingOperationName="listUsers" type="Request-Response" outputName="listUsersResponse" inputName="listUsers" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="07df1f39-de3d-499c-9e13-99d105491ce6" isOneWay="false" action="" name="storeGroup" bindingOperationName="storeGroup" type="Request-Response" outputName="storeGroupResponse" inputName="storeGroup" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="71d9b760-4058-4596-bc35-30fa94e2c70f" isOneWay="false" action="" name="storeUser" bindingOperationName="storeUser" type="Request-Response" outputName="storeUserResponse" inputName="storeUser" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6733cd06-2ff6-4958-9685-b6780bea926e" wsaVersion="NONE" name="/System" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapSystemServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/System?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/System?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/System?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapSystemServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/System?wsdl=System.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapSystemServiceServiceSoapBinding" type="ns1:System">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getLanguages">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLanguages">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLanguagesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatistics">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatistics">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatisticsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapSystemServiceService">
    <wsdl:port binding="tns:SoapSystemServiceServiceSoapBinding" name="SoapSystemServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/System"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/System?wsdl=System.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="System" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="getInfo" type="tns:getInfo"/>
      <xs:element name="getInfoResponse" type="tns:getInfoResponse"/>
      <xs:element name="getLanguages" type="tns:getLanguages"/>
      <xs:element name="getLanguagesResponse" type="tns:getLanguagesResponse"/>
      <xs:element name="getStatistics" type="tns:getStatistics"/>
      <xs:element name="getStatisticsResponse" type="tns:getStatisticsResponse"/>
      <xs:complexType name="getLanguages">
        <xs:sequence>
          <xs:element minOccurs="0" name="tenantOrSid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLanguagesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getInfo">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="tns:WSSystemInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSSystemInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="bugs" type="xs:string"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="features" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="forum" type="xs:string"/>
          <xs:element minOccurs="0" name="help" type="xs:string"/>
          <xs:element minOccurs="0" name="hostName" type="xs:string"/>
          <xs:element minOccurs="0" name="installationId" type="xs:string"/>
          <xs:element minOccurs="0" name="licensee" type="xs:string"/>
          <xs:element minOccurs="0" name="product" type="xs:string"/>
          <xs:element minOccurs="0" name="productName" type="xs:string"/>
          <xs:element minOccurs="0" name="release" type="xs:string"/>
          <xs:element minOccurs="0" name="runLevel" type="xs:string"/>
          <xs:element minOccurs="0" name="support" type="xs:string"/>
          <xs:element minOccurs="0" name="url" type="xs:string"/>
          <xs:element minOccurs="0" name="vendor" type="xs:string"/>
          <xs:element minOccurs="0" name="vendorAddress" type="xs:string"/>
          <xs:element minOccurs="0" name="vendorCap" type="xs:string"/>
          <xs:element minOccurs="0" name="vendorCity" type="xs:string"/>
          <xs:element minOccurs="0" name="vendorCountry" type="xs:string"/>
          <xs:element minOccurs="0" name="year" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatisticsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parameter" type="tns:WSParameter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getInfoResponse">
    <wsdl:part element="ns1:getInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLanguagesResponse">
    <wsdl:part element="ns1:getLanguagesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInfo">
    <wsdl:part element="ns1:getInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatistics">
    <wsdl:part element="ns1:getStatistics" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLanguages">
    <wsdl:part element="ns1:getLanguages" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatisticsResponse">
    <wsdl:part element="ns1:getStatisticsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="System">
    <wsdl:operation name="getLanguages">
      <wsdl:input message="ns1:getLanguages" name="getLanguages"></wsdl:input>
      <wsdl:output message="ns1:getLanguagesResponse" name="getLanguagesResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInfo">
      <wsdl:input message="ns1:getInfo" name="getInfo"></wsdl:input>
      <wsdl:output message="ns1:getInfoResponse" name="getInfoResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatistics">
      <wsdl:input message="ns1:getStatistics" name="getStatistics"></wsdl:input>
      <wsdl:output message="ns1:getStatisticsResponse" name="getStatisticsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/System</con:endpoint></con:endpoints><con:operation id="fc4e6aea-9e49-4081-be39-6dd81beac605" isOneWay="false" action="" name="getInfo" bindingOperationName="getInfo" type="Request-Response" outputName="getInfoResponse" inputName="getInfo" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e200c83b-08b0-4a46-9e6e-d2daa6004c30" isOneWay="false" action="" name="getLanguages" bindingOperationName="getLanguages" type="Request-Response" outputName="getLanguagesResponse" inputName="getLanguages" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c3141943-42a9-4e3b-92eb-fc93760e1dd7" isOneWay="false" action="" name="getStatistics" bindingOperationName="getStatistics" type="Request-Response" outputName="getStatisticsResponse" inputName="getStatistics" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="53768493-f822-47eb-b0ea-bc6419e9da62" wsaVersion="NONE" name="/Tag" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapTagServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Tag?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Tag?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Tag?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapTagServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Tag?wsdl=Tag.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapTagServiceServiceSoapBinding" type="ns1:Tag">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="setFolderTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setFolderTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setFolderTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagCloud">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTagCloud">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTagCloudResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocumentTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addDocumentTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addDocumentTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDocumentsByTag">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findDocumentsByTag">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findDocumentsByTagResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findFoldersByTag">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findFoldersByTag">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findFoldersByTagResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFolderTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFolderTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFolderTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDocumentTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setDocumentTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setDocumentTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagsPreset">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTagsPreset">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTagsPresetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addFolderTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addFolderTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addFolderTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapTagServiceService">
    <wsdl:port binding="tns:SoapTagServiceServiceSoapBinding" name="SoapTagServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Tag"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Tag?wsdl=Tag.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Tag" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="addDocumentTags" type="tns:addDocumentTags"/>
      <xs:element name="addDocumentTagsResponse" type="tns:addDocumentTagsResponse"/>
      <xs:element name="addFolderTags" type="tns:addFolderTags"/>
      <xs:element name="addFolderTagsResponse" type="tns:addFolderTagsResponse"/>
      <xs:element name="attribute" type="tns:WSAttribute"/>
      <xs:element name="document" type="tns:WSDocument"/>
      <xs:element name="findDocumentsByTag" type="tns:findDocumentsByTag"/>
      <xs:element name="findDocumentsByTagResponse" type="tns:findDocumentsByTagResponse"/>
      <xs:element name="findFoldersByTag" type="tns:findFoldersByTag"/>
      <xs:element name="findFoldersByTagResponse" type="tns:findFoldersByTagResponse"/>
      <xs:element name="folder" type="tns:WSFolder"/>
      <xs:element name="getDocumentTags" type="tns:getDocumentTags"/>
      <xs:element name="getDocumentTagsResponse" type="tns:getDocumentTagsResponse"/>
      <xs:element name="getFolderTags" type="tns:getFolderTags"/>
      <xs:element name="getFolderTagsResponse" type="tns:getFolderTagsResponse"/>
      <xs:element name="getTagCloud" type="tns:getTagCloud"/>
      <xs:element name="getTagCloudResponse" type="tns:getTagCloudResponse"/>
      <xs:element name="getTags" type="tns:getTags"/>
      <xs:element name="getTagsPreset" type="tns:getTagsPreset"/>
      <xs:element name="getTagsPresetResponse" type="tns:getTagsPresetResponse"/>
      <xs:element name="getTagsResponse" type="tns:getTagsResponse"/>
      <xs:element name="setDocumentTags" type="tns:setDocumentTags"/>
      <xs:element name="setDocumentTagsResponse" type="tns:setDocumentTagsResponse"/>
      <xs:element name="setFolderTags" type="tns:setFolderTags"/>
      <xs:element name="setFolderTagsResponse" type="tns:setFolderTagsResponse"/>
      <xs:complexType name="setFolderTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setFolderTagsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getTagCloud">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTagCloudResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tagCloud" type="tns:WSTagCloud"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSTagCloud">
        <xs:sequence>
          <xs:element name="count" type="xs:long"/>
          <xs:element name="scale" type="xs:int"/>
          <xs:element minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addDocumentTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addDocumentTagsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="findDocumentsByTag">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findDocumentsByTagResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDocument">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element name="creatorId" type="xs:long"/>
          <xs:element minOccurs="0" name="customId" type="xs:string"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteUserId" type="xs:long"/>
          <xs:element minOccurs="0" name="digest" type="xs:string"/>
          <xs:element minOccurs="0" name="docRef" type="xs:long"/>
          <xs:element minOccurs="0" name="docRefType" type="xs:string"/>
          <xs:element minOccurs="0" name="exportId" type="xs:long"/>
          <xs:element minOccurs="0" name="exportName" type="xs:string"/>
          <xs:element name="exportStatus" type="xs:int"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element name="fileSize" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="formId" type="xs:long"/>
          <xs:element minOccurs="0" name="icon" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="immutable" type="xs:int"/>
          <xs:element name="indexed" type="xs:int"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="lockUserId" type="xs:long"/>
          <xs:element name="nature" type="xs:int"/>
          <xs:element name="pages" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordProtected" type="xs:int"/>
          <xs:element name="published" type="xs:int"/>
          <xs:element minOccurs="0" name="publisher" type="xs:string"/>
          <xs:element name="publisherId" type="xs:long"/>
          <xs:element minOccurs="0" name="rating" type="xs:int"/>
          <xs:element minOccurs="0" name="score" type="xs:int"/>
          <xs:element name="signed" type="xs:int"/>
          <xs:element name="stamped" type="xs:int"/>
          <xs:element minOccurs="0" name="startPublishing" type="xs:string"/>
          <xs:element name="status" type="xs:int"/>
          <xs:element minOccurs="0" name="stopPublishing" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowStatus" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowStatusDisplay" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateValue" type="xs:string"/>
          <xs:element minOccurs="0" name="doubleValue" type="xs:double"/>
          <xs:element name="editor" type="xs:int"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element minOccurs="0" name="intValue" type="xs:long"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element name="mandatory" type="xs:int"/>
          <xs:element name="multiple" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="parent" type="xs:string"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
          <xs:element minOccurs="0" name="stringValues" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findFoldersByTag">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findFoldersByTagResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSFolder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="foldRef" type="xs:long"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="securityRef" type="xs:long"/>
          <xs:element minOccurs="0" name="storage" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element name="templateLocked" type="xs:int"/>
          <xs:element name="type" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFolderTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFolderTagsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentTagsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTagsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setDocumentTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setDocumentTagsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getTagsPreset">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTagsPresetResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addFolderTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addFolderTagsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="setFolderTags">
    <wsdl:part element="ns1:setFolderTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagCloudResponse">
    <wsdl:part element="ns1:getTagCloudResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDocumentTagsResponse">
    <wsdl:part element="ns1:addDocumentTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDocumentTags">
    <wsdl:part element="ns1:addDocumentTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsResponse">
    <wsdl:part element="ns1:getTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addFolderTagsResponse">
    <wsdl:part element="ns1:addFolderTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTags">
    <wsdl:part element="ns1:getDocumentTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTags">
    <wsdl:part element="ns1:getTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsPresetResponse">
    <wsdl:part element="ns1:getTagsPresetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagCloud">
    <wsdl:part element="ns1:getTagCloud" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFolderTagsResponse">
    <wsdl:part element="ns1:getFolderTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDocumentsByTag">
    <wsdl:part element="ns1:findDocumentsByTag" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findFoldersByTagResponse">
    <wsdl:part element="ns1:findFoldersByTagResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDocumentsByTagResponse">
    <wsdl:part element="ns1:findDocumentsByTagResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findFoldersByTag">
    <wsdl:part element="ns1:findFoldersByTag" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFolderTags">
    <wsdl:part element="ns1:getFolderTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setDocumentTags">
    <wsdl:part element="ns1:setDocumentTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsPreset">
    <wsdl:part element="ns1:getTagsPreset" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTagsResponse">
    <wsdl:part element="ns1:getDocumentTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setDocumentTagsResponse">
    <wsdl:part element="ns1:setDocumentTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addFolderTags">
    <wsdl:part element="ns1:addFolderTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setFolderTagsResponse">
    <wsdl:part element="ns1:setFolderTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Tag">
    <wsdl:operation name="setFolderTags">
      <wsdl:input message="ns1:setFolderTags" name="setFolderTags"></wsdl:input>
      <wsdl:output message="ns1:setFolderTagsResponse" name="setFolderTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagCloud">
      <wsdl:input message="ns1:getTagCloud" name="getTagCloud"></wsdl:input>
      <wsdl:output message="ns1:getTagCloudResponse" name="getTagCloudResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocumentTags">
      <wsdl:input message="ns1:addDocumentTags" name="addDocumentTags"></wsdl:input>
      <wsdl:output message="ns1:addDocumentTagsResponse" name="addDocumentTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDocumentsByTag">
      <wsdl:input message="ns1:findDocumentsByTag" name="findDocumentsByTag"></wsdl:input>
      <wsdl:output message="ns1:findDocumentsByTagResponse" name="findDocumentsByTagResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findFoldersByTag">
      <wsdl:input message="ns1:findFoldersByTag" name="findFoldersByTag"></wsdl:input>
      <wsdl:output message="ns1:findFoldersByTagResponse" name="findFoldersByTagResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFolderTags">
      <wsdl:input message="ns1:getFolderTags" name="getFolderTags"></wsdl:input>
      <wsdl:output message="ns1:getFolderTagsResponse" name="getFolderTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentTags">
      <wsdl:input message="ns1:getDocumentTags" name="getDocumentTags"></wsdl:input>
      <wsdl:output message="ns1:getDocumentTagsResponse" name="getDocumentTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTags">
      <wsdl:input message="ns1:getTags" name="getTags"></wsdl:input>
      <wsdl:output message="ns1:getTagsResponse" name="getTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDocumentTags">
      <wsdl:input message="ns1:setDocumentTags" name="setDocumentTags"></wsdl:input>
      <wsdl:output message="ns1:setDocumentTagsResponse" name="setDocumentTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagsPreset">
      <wsdl:input message="ns1:getTagsPreset" name="getTagsPreset"></wsdl:input>
      <wsdl:output message="ns1:getTagsPresetResponse" name="getTagsPresetResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addFolderTags">
      <wsdl:input message="ns1:addFolderTags" name="addFolderTags"></wsdl:input>
      <wsdl:output message="ns1:addFolderTagsResponse" name="addFolderTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint></con:endpoints><con:operation id="410455e6-154a-4640-8ee2-5d31c35482ea" isOneWay="false" action="" name="addDocumentTags" bindingOperationName="addDocumentTags" type="Request-Response" outputName="addDocumentTagsResponse" inputName="addDocumentTags" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c0868b27-e02b-4de1-84d9-38770a125ce9" isOneWay="false" action="" name="addFolderTags" bindingOperationName="addFolderTags" type="Request-Response" outputName="addFolderTagsResponse" inputName="addFolderTags" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6849b367-8040-4466-b95b-a98018af5801" isOneWay="false" action="" name="findDocumentsByTag" bindingOperationName="findDocumentsByTag" type="Request-Response" outputName="findDocumentsByTagResponse" inputName="findDocumentsByTag" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="22f023e3-51e1-42cc-8302-e2ff805d8a5d" isOneWay="false" action="" name="findFoldersByTag" bindingOperationName="findFoldersByTag" type="Request-Response" outputName="findFoldersByTagResponse" inputName="findFoldersByTag" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="82106af5-36f2-4b28-88da-c549c2c1cdb5" isOneWay="false" action="" name="getDocumentTags" bindingOperationName="getDocumentTags" type="Request-Response" outputName="getDocumentTagsResponse" inputName="getDocumentTags" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a02bd1bd-cce3-43b7-a877-80d8a252b12e" isOneWay="false" action="" name="getFolderTags" bindingOperationName="getFolderTags" type="Request-Response" outputName="getFolderTagsResponse" inputName="getFolderTags" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="46c3ca74-d37a-4e44-814d-672492168770" isOneWay="false" action="" name="getTagCloud" bindingOperationName="getTagCloud" type="Request-Response" outputName="getTagCloudResponse" inputName="getTagCloud" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1c63c076-299d-40ec-9597-272990d6e932" isOneWay="false" action="" name="getTags" bindingOperationName="getTags" type="Request-Response" outputName="getTagsResponse" inputName="getTags" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f154dd6-b5e0-4dcc-af6a-b738f06f1dc1" isOneWay="false" action="" name="getTagsPreset" bindingOperationName="getTagsPreset" type="Request-Response" outputName="getTagsPresetResponse" inputName="getTagsPreset" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f3506019-258c-4732-990c-bd4958a17205" isOneWay="false" action="" name="setDocumentTags" bindingOperationName="setDocumentTags" type="Request-Response" outputName="setDocumentTagsResponse" inputName="setDocumentTags" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="614e34da-ec33-44f1-b9f0-af3ae17c0050" isOneWay="false" action="" name="setFolderTags" bindingOperationName="setFolderTags" type="Request-Response" outputName="setFolderTagsResponse" inputName="setFolderTags" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:testSuite id="2c68c6fa-85d5-41b7-bfbb-f01d65d87192" name="TestFunctionalities"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="224168b6-0cff-41b1-ae70-49a27ad01fde" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="loginAdmin" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="76cc7814-510d-4506-a6d2-f1da77383b7f" name="get login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Auth</con:interface><con:operation>login</con:operation><con:request name="get login" id="5a689ce4-6895-46c2-b7e9-d6f932013134"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         <username>admin</username>
         <!--Optional:-->
         <password>admin</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="9686b721-b863-4e57-9b00-3c0866fe78d5" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="0480d9a7-7d4b-4496-b223-6340f3cd88f9" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="5bd163b2-e315-48c1-b18d-f79658aac420" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" id="f5600100-e921-424c-b3fc-48b874607db2" name="regex ID" disabled="true"><con:configuration><token>(.{8}\-)(.{4}\-)(.{4}\-)(.{4}\-)(.{12})</token><ignoreCase>true</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="acb0262d-0fed-43f8-b78b-03e97787ce83"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>login</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>get login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>loginadmin</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f4e3535e-c559-4636-8d03-858a067618d5" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="listWorkSpaces" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="7c44968b-07df-455f-ae20-9b53d4fd04ff" name="get listWorkSpaces"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Folder</con:interface><con:operation>listWorkspaces</con:operation><con:request name="get listWorkSpaces" id="4174bbb6-4a2d-411b-a65b-213319e5abf8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:listWorkspaces>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
      </ws:listWorkspaces>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="9d3f83dd-0db5-448c-bff8-aa88e3f6c8a6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="80cde269-5c03-4657-8462-92938fb2e865" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="8da9efe8-dd74-4714-ac19-1864db9c4648" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="XPath Match" id="5d2cada2-1348-4197-a7b4-da64443410b5" name="XPath Match: workspace type"><con:configuration><path>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:listWorkspacesResponse[1]/workspaces[1]/type[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Folder/listWorkspaces" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="7081aef3-aea9-417e-8c03-7e23f45c9a7f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>idworkspaces</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>get listWorkSpaces</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:listWorkspacesResponse[1]/workspaces[1]/parentId[1]</con:sourcePath><con:targetType>workspaces</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="059abfe9-1491-47d9-af71-4c6339139b2d" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="getRootFolder" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="0656c595-22f1-414f-aed3-814c53d18be0" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Folder</con:interface><con:operation>getRootFolder</con:operation><con:request name="SOAP Request" id="d1677e92-cc86-4b43-a02e-85668a52b243"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getRootFolder>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
      </ws:getRootFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="79206669-e829-4d55-af84-3219930bd3c1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="a27de777-6a2a-42d5-b88c-8690ed101fe8" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="0c32b697-e654-4db7-b123-2452f70e2f36" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="XPath Match" id="0b2a2e60-4d58-40be-8afd-2c1756e61778" name="XPath Match: rootfolder position"><con:configuration><path>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getRootFolderResponse[1]/folder[1]/position[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Folder/getRootFolder" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="99beafe3-09fe-4184-8add-68a873b5c8d4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>idrootfolder</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SOAP Request</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getRootFolderResponse[1]/folder[1]/id[1]</con:sourcePath><con:targetType>rootfolder</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9bdd724f-ff9a-4fa2-a006-e8066405c49f" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="createFolder" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="4041c262-bbf2-4dac-83f6-780d49d49763" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Folder</con:interface><con:operation>createFolder</con:operation><con:request name="SOAP Request" id="300fb8a6-fd77-47cc-bc5c-a64bad8ceb21"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createFolder>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <parentId>${#TestSuite#workspaces}</parentId><name>Projet LogicalDoc</name>
         <!--Optional:-->
         
      </ws:createFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="0224679a-b72c-4bd5-b3b0-797bc407862c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="7f09e3f2-5f5f-419b-9036-02acfc1a32fa" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="2c6f017d-e16d-4aa4-b349-5872465eb5b3" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Simple Contains" id="bbadf9c6-18df-46bc-9dcb-f0b26f578ad2" name="Contains" disabled="true"><con:configuration><token>.{3}</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="e8261190-5faf-4146-ab22-f1e5f168ecde"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>idprojectfolder</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SOAP Request</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createFolderResponse[1]/folderId[1]</con:sourcePath><con:targetType>projectfolder</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="0768b0bc-2147-4195-ac69-fb5da7617a84" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="listChildrenFolders" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="cd26e3ef-704a-402d-b573-b52541e0a0f3" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Folder</con:interface><con:operation>listChildren</con:operation><con:request name="SOAP Request" id="88221300-9e65-4d33-a1b5-95f6b0d9a0a0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:listChildren>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <folderId>${#TestSuite#rootfolder}</folderId>
      </ws:listChildren>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="db7203dd-ec36-40c8-a6a6-fda08f0469f5" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="9c183353-616f-42ec-9bf1-13ddb3396d56" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="5eb778df-7e0c-4bdd-b4c5-75d876013ace" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="XPath Match" id="04a2da62-2979-4574-a108-8d9bd1e7c123" name="XPath Match"><con:configuration><path>count(//folder)</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Folder/listChildren" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="fa5b2ace-1fa9-459e-a4e4-6fe3b2f809d8" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="simpleCreateDocuments" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="a499b09b-6aa4-4eaa-ae15-b75b6cb7c9d8" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Document</con:interface><con:operation>upload</con:operation><con:request name="SOAP Request" id="f058a6c2-e345-4877-9bed-dea9c5e43f22"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:upload>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <!--Optional:-->
         
         <!--Optional:-->
         <folderId>${#TestSuite#projectfolder}</folderId>
         <release>true</release>
         <!--Optional:-->
         <filename>projetLogicalDoc.txt</filename>
         <!--Optional:-->
         <language>fr</language>
         <!--Optional:-->
         <content>cid:781305899295</content>
      </ws:upload>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="51cb0923-e8f2-4c6c-b6f0-d1af2b01be08" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="0af431c5-635b-4fa9-bada-73d622dbdb5d" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="58b66c90-4942-4831-bad5-90491aef4aa8" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Document/upload" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="fb26f643-714f-43e2-886f-778876b53e48" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="listDocuments" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="a3d35356-bd4e-40ff-8dde-a1e809d1bb90" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Document</con:interface><con:operation>listDocuments</con:operation><con:request name="SOAP Request" id="991e9065-097c-41d2-84b1-6d1d260e1227"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:listDocuments>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <folderId>${#TestSuite#projectfolder}</folderId>
         <!--Optional:-->
         
      </ws:listDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="285da394-595a-4ea8-bf5b-ec0e1193c0e0" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="ced6f052-b40f-46b3-90ed-81e6630fa0bd" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="dfe8f1ee-b80e-4146-81ec-96164d2beb15" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Document/listDocuments" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="03c61ebc-a129-4d7b-8f62-b083843a5a9a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>iddocument</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SOAP Request</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:listDocumentsResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>projectdoc</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>namedocument</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SOAP Request</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:listDocumentsResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>projectdocname</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="971f4938-a01b-4b5e-82c6-50d1bc38d944" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="unlockDocuments" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="fa827f58-5533-4f41-9a7d-65401084c106" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Document</con:interface><con:operation>unlock</con:operation><con:request name="SOAP Request" id="14544089-8b6a-4366-8fa2-eb45d3c8d592"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:unlock>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <docId>${#TestSuite#projectdoc}</docId>
      </ws:unlock>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="33aee636-42d6-4e9a-b976-5c3a9150e9d6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="534c6b42-cdcc-4db0-aaeb-ecfe0f59f100" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="639d6629-4c73-4f48-b7de-befa13394956" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Document/unlock" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="8c0af663-a3b6-4552-82b9-24d9cca57b0d" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="findByFilename" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="668ff9c5-5274-4c8e-a385-c91e1289d31e" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Search</con:interface><con:operation>findByFilename</con:operation><con:request name="SOAP Request" id="0820b1bc-03a4-4165-a00d-70692b4dd82a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Search</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:findByFilename>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid><filename>${#TestSuite#projectdocname}</filename>
         <!--Optional:-->
         
      </ws:findByFilename>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="8bc0fef0-3b57-45b8-913b-64c8a2b9ae1e" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="47769ce0-c6d3-4f02-bbbd-9a53b343c1c4" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="a7521163-441a-44e7-88fc-bdb84a2f96f0" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Search/findByFilename" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5cbe2f00-f320-4030-ae18-8bfbd2f2f93f" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="findByDate" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="6ae24b5e-3602-4581-a44e-ef009dfd1436" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Search</con:interface><con:operation>find</con:operation><con:request name="SOAP Request" id="5bca535e-9fa1-4433-840e-f575bed50475"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Search</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:find>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <!--Optional:-->
         <options>
            <caseSensitive/>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <creationFrom>2021-05-03</creationFrom><creationTo>2021-05-20</creationTo><fields xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><maxHits/>
            <!--Optional:-->
            
            <retrieveAliases/>
            <searchInSubPath/>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <type/>
         </options>
      </ws:find>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="816edea3-b74b-4f43-ad6c-37db91385bbb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="1aad152b-a3ca-400d-ae0f-43cbac049df5" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="5404fede-4170-4b88-b082-b1b69796395a" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Search/find" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="29790fda-7df4-4ab1-b953-af1730c69261" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="bookmarkDocuments" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="9567595e-5f9e-422c-bee2-09d9961f8646" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Bookmark</con:interface><con:operation>bookmarkDocument</con:operation><con:request name="SOAP Request" id="dadf8851-76ea-4388-ae17-7ad7ff1f1a11"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:bookmarkDocument>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <docId>${#TestSuite#projectdoc}</docId>
      </ws:bookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="68daacef-5263-4e1d-b7de-d61d3731441b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="43cd014c-e5ff-4f35-b084-555bd571bf14" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="b1facbeb-3366-4e14-a79b-8ca647e9f39b" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/bookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a6ff43b5-83ea-4c51-900b-4724602f1a17" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="unbookmarkDocuments" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="e5fe8763-0ee7-4d7f-b80e-0d9d2c4b79f6" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Bookmark</con:interface><con:operation>unbookmarkDocument</con:operation><con:request name="SOAP Request" id="0436bd55-1f9c-4bc7-b4e6-7dee0ecbc63b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:unbookmarkDocument>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <docId>${#TestSuite#projectdoc}</docId>
      </ws:unbookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="19d1c72e-9c03-41f0-9a45-4d73dcec2677" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="965517b6-a84e-4220-b143-b5b0c5c17261" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="1dbb0a49-bfb5-4684-bbd2-b9c7c34097ee" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/unbookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a51dfbaa-83f1-4b2f-b10d-17465844ccf7" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="deleteDocuments" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="41e569c2-1df4-423f-8fbf-e1d5f250b986" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Document</con:interface><con:operation>delete</con:operation><con:request name="SOAP Request" id="cc0687e5-0f58-4957-9758-11cf98e97c85"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:delete>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <docId>${#TestSuite#projectdoc}</docId>
      </ws:delete>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="a0404ba2-9fd8-49a4-b79f-67f565d9fc29" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="c5e9b185-ad17-471e-a729-0a50286e410f" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="74f7bc95-f035-4439-b0e6-cb94338d4480" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Document/delete" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="741c8e49-7c79-4c7e-a954-6cbf59be3c9f" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="deleteFolder" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:testStep type="request" id="f4b7d17b-6979-40dd-a523-e2d5e1b3adf7" name="SOAP Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>/Folder</con:interface><con:operation>delete</con:operation><con:request name="SOAP Request" id="7605dcfb-1fce-460f-a82c-ac107899a30a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:delete>
         <!--Optional:-->
         <sid>${#TestSuite#loginadmin}</sid>
         <folderId>${#TestSuite#projectfolder}</folderId>
      </ws:delete>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="88bf7acc-ebfa-4b01-91bf-921f4d84d2af" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="226ba283-94da-4700-8105-a0782eab17d3" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="1145350c-4272-4fb5-a0ef-52d6f970dc50" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Folder/delete" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>loginadmin</con:name><con:value>99d98c8e-5018-4130-8ee9-c577f4889a56</con:value></con:property><con:property><con:name>workspaces</con:name><con:value>5</con:value></con:property><con:property><con:name>rootfolder</con:name><con:value>5</con:value></con:property><con:property><con:name>projectfolder</con:name><con:value>108</con:value></con:property><con:property><con:name>projectdoc</con:name><con:value>108</con:value></con:property><con:property><con:name>projectdocname</con:name><con:value>projetLogicalDoc.txt</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>